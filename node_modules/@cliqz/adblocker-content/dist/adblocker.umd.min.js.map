{"version":3,"file":"adblocker.umd.min.js","sources":["src/adblocker.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nconst SCRIPT_ID = 'cliqz-adblocker-script';\nconst IGNORED_TAGS = new Set(['br', 'head', 'link', 'meta', 'script', 'style', 's']);\nfunction isElement(node) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#node_type_constants\n    return node.nodeType === 1; // Node.ELEMENT_NODE;\n}\nfunction getElementsFromMutations(mutations) {\n    // Accumulate all nodes which were updated in `nodes`\n    const elements = [];\n    for (const mutation of mutations) {\n        if (mutation.type === 'attributes') {\n            if (isElement(mutation.target)) {\n                elements.push(mutation.target);\n            }\n        }\n        else if (mutation.type === 'childList') {\n            for (const addedNode of mutation.addedNodes) {\n                if (isElement(addedNode) && addedNode.id !== SCRIPT_ID) {\n                    elements.push(addedNode);\n                }\n            }\n        }\n    }\n    return elements;\n}\n/**\n * WARNING: this function should be self-contained and not rely on any global\n * symbol. That constraint needs to be fulfilled because this function can\n * potentially be injected in content-script (e.g.: see PuppeteerBlocker for\n * more details).\n */\nexport function extractFeaturesFromDOM(roots) {\n    // NOTE: This cannot be global as puppeteer needs to be able to serialize this function.\n    const ignoredTags = new Set(['br', 'head', 'link', 'meta', 'script', 'style', 's']);\n    const classes = new Set();\n    const hrefs = new Set();\n    const ids = new Set();\n    for (const root of roots) {\n        for (const element of [\n            root,\n            ...root.querySelectorAll('[id]:not(html):not(body),[class]:not(html):not(body),[href]:not(html):not(body)'),\n        ]) {\n            if (ignoredTags.has(element.nodeName.toLowerCase())) {\n                continue;\n            }\n            // Update ids\n            const id = element.id;\n            if (id) {\n                ids.add(id);\n            }\n            // Update classes\n            const classList = element.classList;\n            if (classList) {\n                for (const cls of classList) {\n                    classes.add(cls);\n                }\n            }\n            // Update href\n            const href = element.getAttribute('href');\n            if (typeof href === 'string') {\n                hrefs.add(href);\n            }\n        }\n    }\n    return {\n        classes: Array.from(classes),\n        hrefs: Array.from(hrefs),\n        ids: Array.from(ids),\n    };\n}\nexport class DOMMonitor {\n    constructor(cb) {\n        this.cb = cb;\n        this.knownIds = new Set();\n        this.knownHrefs = new Set();\n        this.knownClasses = new Set();\n        this.observer = null;\n    }\n    queryAll(window) {\n        this.cb({ type: 'elements', elements: [window.document.documentElement] });\n        this.handleUpdatedNodes([window.document.documentElement]);\n    }\n    start(window) {\n        if (this.observer === null && window.MutationObserver !== undefined) {\n            this.observer = new window.MutationObserver((mutations) => {\n                this.handleUpdatedNodes(getElementsFromMutations(mutations));\n            });\n            this.observer.observe(window.document.documentElement, {\n                // Monitor some attributes\n                attributes: true,\n                attributeFilter: ['class', 'id', 'href'],\n                childList: true,\n                subtree: true,\n            });\n        }\n    }\n    stop() {\n        if (this.observer !== null) {\n            this.observer.disconnect();\n            this.observer = null;\n        }\n    }\n    handleNewFeatures({ hrefs, ids, classes, }) {\n        const newIds = [];\n        const newClasses = [];\n        const newHrefs = [];\n        // Update ids\n        for (const id of ids) {\n            if (this.knownIds.has(id) === false) {\n                newIds.push(id);\n                this.knownIds.add(id);\n            }\n        }\n        for (const cls of classes) {\n            if (this.knownClasses.has(cls) === false) {\n                newClasses.push(cls);\n                this.knownClasses.add(cls);\n            }\n        }\n        for (const href of hrefs) {\n            if (this.knownHrefs.has(href) === false) {\n                newHrefs.push(href);\n                this.knownHrefs.add(href);\n            }\n        }\n        if (newIds.length !== 0 || newClasses.length !== 0 || newHrefs.length !== 0) {\n            this.cb({\n                type: 'features',\n                classes: newClasses,\n                hrefs: newHrefs,\n                ids: newIds,\n            });\n            return true;\n        }\n        return false;\n    }\n    handleUpdatedNodes(elements) {\n        if (elements.length !== 0) {\n            this.cb({\n                type: 'elements',\n                elements: elements.filter((e) => IGNORED_TAGS.has(e.nodeName.toLowerCase()) === false),\n            });\n            return this.handleNewFeatures(extractFeaturesFromDOM(elements));\n        }\n        return false;\n    }\n}\n/**\n * Wrap a self-executing script into a block of custom logic to remove the\n * script tag once execution is terminated. This can be useful to not leave\n * traces in the DOM after injections.\n */\nexport function autoRemoveScript(script) {\n    // Minified using 'terser'\n    return `try{${script}}catch(c){}!function(){var c=document.currentScript,e=c&&c.parentNode;e&&e.removeChild(c)}();`;\n    // Original:\n    //\n    //    try {\n    //      ${script}\n    //    } catch (ex) { }\n    //\n    //    (function() {\n    //      var currentScript = document.currentScript;\n    //      var parent = currentScript && currentScript.parentNode;\n    //\n    //      if (parent) {\n    //        parent.removeChild(currentScript);\n    //      }\n    //    })();\n}\nfunction insertNode(node, document) {\n    const parent = document.head || document.documentElement || document;\n    if (parent !== null) {\n        parent.appendChild(node);\n    }\n}\nfunction injectScriptlet(s, doc) {\n    const script = doc.createElement('script');\n    script.type = 'text/javascript';\n    script.id = SCRIPT_ID;\n    script.async = false;\n    script.appendChild(doc.createTextNode(autoRemoveScript(s)));\n    insertNode(script, doc);\n}\nfunction isFirefox(doc) {\n    var _a, _b, _c;\n    try {\n        return ((_c = (_b = (_a = doc.defaultView) === null || _a === void 0 ? void 0 : _a.navigator) === null || _b === void 0 ? void 0 : _b.userAgent) === null || _c === void 0 ? void 0 : _c.indexOf('Firefox')) !== -1;\n    }\n    catch (e) {\n        return false;\n    }\n}\nasync function injectScriptletFirefox(s, doc) {\n    const win = doc.defaultView;\n    const script = doc.createElement('script');\n    script.async = false;\n    script.id = SCRIPT_ID;\n    const blob = new win.Blob([autoRemoveScript(s)], { type: 'text/javascript; charset=utf-8' });\n    const url = win.URL.createObjectURL(blob);\n    // a hack for tests to that allows for async URL.createObjectURL\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    script.src = await url;\n    insertNode(script, doc);\n    win.URL.revokeObjectURL(url);\n}\nexport function injectScript(s, doc) {\n    if (isFirefox(doc)) {\n        injectScriptletFirefox(s, doc);\n    }\n    else {\n        injectScriptlet(s, doc);\n    }\n}\n//# sourceMappingURL=adblocker.js.map"],"names":["SCRIPT_ID","IGNORED_TAGS","Set","isElement","node","nodeType","extractFeaturesFromDOM","roots","ignoredTags","classes","hrefs","ids","root","element","querySelectorAll","has","nodeName","toLowerCase","id","add","classList","cls","href","getAttribute","Array","from","autoRemoveScript","script","insertNode","document","parent","head","documentElement","appendChild","constructor","cb","this","knownIds","knownHrefs","knownClasses","observer","queryAll","window","type","elements","handleUpdatedNodes","start","undefined","MutationObserver","mutations","mutation","target","push","addedNode","addedNodes","getElementsFromMutations","observe","attributes","attributeFilter","childList","subtree","stop","disconnect","handleNewFeatures","newIds","newClasses","newHrefs","length","filter","e","s","doc","_a","_b","_c","defaultView","navigator","userAgent","indexOf","isFirefox","createElement","async","createTextNode","injectScriptlet","win","blob","Blob","url","URL","createObjectURL","src","revokeObjectURL","injectScriptletFirefox"],"mappings":"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"}