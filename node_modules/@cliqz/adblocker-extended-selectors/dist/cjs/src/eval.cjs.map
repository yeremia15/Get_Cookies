{"version":3,"file":"eval.cjs","sources":["../../src/src/eval.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nexport function matchPattern(pattern, text) {\n    // TODO - support 'm' RegExp argument\n    if (pattern.startsWith('/') && (pattern.endsWith('/') || pattern.endsWith('/i'))) {\n        let caseSensitive = true;\n        pattern = pattern.slice(1);\n        if (pattern.endsWith('/')) {\n            pattern = pattern.slice(0, -1);\n        }\n        else {\n            pattern = pattern.slice(0, -2);\n            caseSensitive = false;\n        }\n        return new RegExp(pattern, caseSensitive === false ? 'i' : undefined).test(text);\n    }\n    return text.includes(pattern);\n}\nexport function matches(element, selector) {\n    if (selector.type === 'id' ||\n        selector.type === 'class' ||\n        selector.type === 'type' ||\n        selector.type === 'attribute') {\n        return element.matches(selector.content);\n    }\n    else if (selector.type === 'list') {\n        return selector.list.some((s) => matches(element, s));\n    }\n    else if (selector.type === 'compound') {\n        return selector.compound.every((s) => matches(element, s));\n    }\n    else if (selector.type === 'pseudo-class') {\n        if (selector.name === 'has' || selector.name === 'if') {\n            // TODO - is this a querySelectorAll or matches here?\n            return (selector.subtree !== undefined && querySelectorAll(element, selector.subtree).length !== 0);\n        }\n        else if (selector.name === 'not') {\n            return selector.subtree !== undefined && matches(element, selector.subtree) === false;\n        }\n        else if (selector.name === 'has-text') {\n            const { argument } = selector;\n            if (argument === undefined) {\n                return false;\n            }\n            const text = element.textContent;\n            if (text === null) {\n                return false;\n            }\n            return matchPattern(argument, text);\n        }\n        else if (selector.name === 'min-text-length') {\n            const minLength = Number(selector.argument);\n            if (Number.isNaN(minLength) || minLength < 0) {\n                return false;\n            }\n            const text = element.textContent;\n            if (text === null) {\n                return false;\n            }\n            return text.length >= minLength;\n        }\n    }\n    return false;\n}\nexport function querySelectorAll(element, selector) {\n    const elements = [];\n    if (selector.type === 'id' ||\n        selector.type === 'class' ||\n        selector.type === 'type' ||\n        selector.type === 'attribute') {\n        elements.push(...element.querySelectorAll(selector.content));\n    }\n    else if (selector.type === 'list') {\n        for (const subSelector of selector.list) {\n            elements.push(...querySelectorAll(element, subSelector));\n        }\n    }\n    else if (selector.type === 'compound') {\n        // TODO - handling compound needs to be reworked...\n        // .cls:upward(1) for example will not work with this implementation.\n        // :upward is not about selecting, but transforming a set of nodes (i.e.\n        // uBO's transpose method).\n        if (selector.compound.length !== 0) {\n            elements.push(...querySelectorAll(element, selector.compound[0]).filter((e) => selector.compound.slice(1).every((s) => matches(e, s))));\n        }\n    }\n    else if (selector.type === 'complex') {\n        const elements2 = selector.left === undefined ? [element] : querySelectorAll(element, selector.left);\n        if (selector.combinator === ' ') {\n            for (const element2 of elements2) {\n                elements.push(...querySelectorAll(element2, selector.right));\n            }\n        }\n        else if (selector.combinator === '>') {\n            for (const element2 of elements2) {\n                for (const child of element2.children) {\n                    if (matches(child, selector.right) === true) {\n                        elements.push(child);\n                    }\n                }\n            }\n        }\n        else if (selector.combinator === '~') {\n            for (const element2 of elements2) {\n                let sibling = element2;\n                while ((sibling = sibling.nextElementSibling) !== null) {\n                    if (matches(sibling, selector.right) === true) {\n                        elements.push(sibling);\n                    }\n                }\n            }\n        }\n        else if (selector.combinator === '+') {\n            for (const element2 of elements2) {\n                const nextElementSibling = element2.nextElementSibling;\n                if (nextElementSibling !== null && matches(nextElementSibling, selector.right) === true) {\n                    elements.push(nextElementSibling);\n                }\n            }\n        }\n    }\n    else if (selector.type === 'pseudo-class') {\n        // if (selector.name === 'upward') {\n        //   let n = Number(selector.argument);\n        //   console.log('upward', selector, n);\n        //   if (Number.isNaN(n) === false) {\n        //     if (n >= 1 && n < 256) {\n        //       let ancestor: Element | null = element;\n        //       while (ancestor !== null && n > 0) {\n        //         ancestor = ancestor.parentElement;\n        //         n -= 1;\n        //       }\n        //       if (ancestor !== null && n === 0) {\n        //         elements.push(element);\n        //       }\n        //     }\n        //   } else if (selector.argument !== undefined) {\n        //     const parent = element.parentElement;\n        //     if (parent !== null) {\n        //       const ancestor = parent.closest(selector.argument);\n        //       if (ancestor !== null) {\n        //         elements.push(ancestor);\n        //       }\n        //     }\n        //   }\n        // } else {\n        for (const subElement of element.querySelectorAll('*')) {\n            if (matches(subElement, selector) === true) {\n                elements.push(subElement);\n            }\n        }\n        // }\n    }\n    return elements;\n}\n//# sourceMappingURL=eval.js.map"],"names":[],"mappings":"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"}