{"version":3,"file":"request.cjs","sources":["../../src/src/request.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport guessUrlType from '@remusao/guess-url-type';\nimport { parse } from 'tldts-experimental';\nimport { EMPTY_UINT32_ARRAY } from './data-view';\nimport { TOKENS_BUFFER } from './tokens-buffer';\nimport { fastHash, tokenizeNoSkipInPlace, HASH_SEED, HASH_INTERNAL_MULT } from './utils';\nconst TLDTS_OPTIONS = {\n    extractHostname: true,\n    mixedInputs: false,\n    validateHostname: false,\n};\nexport const NORMALIZED_TYPE_TOKEN = {\n    beacon: fastHash('type:beacon'),\n    cspReport: fastHash('type:csp'),\n    csp_report: fastHash('type:csp'),\n    cspviolationreport: fastHash('type:cspviolationreport'),\n    document: fastHash('type:document'),\n    eventsource: fastHash('type:other'),\n    fetch: fastHash('type:xhr'),\n    font: fastHash('type:font'),\n    image: fastHash('type:image'),\n    imageset: fastHash('type:image'),\n    mainFrame: fastHash('type:document'),\n    main_frame: fastHash('type:document'),\n    manifest: fastHash('type:other'),\n    media: fastHash('type:media'),\n    object: fastHash('type:object'),\n    object_subrequest: fastHash('type:object'),\n    other: fastHash('type:other'),\n    ping: fastHash('type:ping'),\n    prefetch: fastHash('type:other'),\n    preflight: fastHash('type:preflight'),\n    script: fastHash('type:script'),\n    signedexchange: fastHash('type:signedexchange'),\n    speculative: fastHash('type:other'),\n    stylesheet: fastHash('type:stylesheet'),\n    subFrame: fastHash('type:subdocument'),\n    sub_frame: fastHash('type:subdocument'),\n    texttrack: fastHash('type:other'),\n    webSocket: fastHash('type:websocket'),\n    web_manifest: fastHash('type:other'),\n    websocket: fastHash('type:websocket'),\n    xhr: fastHash('type:xhr'),\n    xml_dtd: fastHash('type:other'),\n    xmlhttprequest: fastHash('type:xhr'),\n    xslt: fastHash('type:other'),\n};\nexport function hashHostnameBackward(hostname) {\n    let hash = HASH_SEED;\n    for (let j = hostname.length - 1; j >= 0; j -= 1) {\n        hash = (hash * HASH_INTERNAL_MULT) ^ hostname.charCodeAt(j);\n    }\n    return hash >>> 0;\n}\nexport function getHashesFromLabelsBackward(hostname, end, startOfDomain) {\n    TOKENS_BUFFER.reset();\n    let hash = HASH_SEED;\n    // Compute hash backward, label per label\n    for (let i = end - 1; i >= 0; i -= 1) {\n        const code = hostname.charCodeAt(i);\n        // Process label\n        if (code === 46 /* '.' */ && i < startOfDomain) {\n            TOKENS_BUFFER.push(hash >>> 0);\n        }\n        // Update hash\n        hash = (hash * HASH_INTERNAL_MULT) ^ code;\n    }\n    TOKENS_BUFFER.push(hash >>> 0);\n    return TOKENS_BUFFER.slice();\n}\n/**\n * Given a hostname and its domain, return the hostname without the public\n * suffix. We know that the domain, with one less label on the left, will be a\n * the public suffix; and from there we know which trailing portion of\n * `hostname` we should remove.\n */\nexport function getHostnameWithoutPublicSuffix(hostname, domain) {\n    let hostnameWithoutPublicSuffix = null;\n    const indexOfDot = domain.indexOf('.');\n    if (indexOfDot !== -1) {\n        const publicSuffix = domain.slice(indexOfDot + 1);\n        hostnameWithoutPublicSuffix = hostname.slice(0, -publicSuffix.length - 1);\n    }\n    return hostnameWithoutPublicSuffix;\n}\nexport function getEntityHashesFromLabelsBackward(hostname, domain) {\n    const hostnameWithoutPublicSuffix = getHostnameWithoutPublicSuffix(hostname, domain);\n    if (hostnameWithoutPublicSuffix !== null) {\n        return getHashesFromLabelsBackward(hostnameWithoutPublicSuffix, hostnameWithoutPublicSuffix.length, hostnameWithoutPublicSuffix.length);\n    }\n    return EMPTY_UINT32_ARRAY;\n}\nexport function getHostnameHashesFromLabelsBackward(hostname, domain) {\n    return getHashesFromLabelsBackward(hostname, hostname.length, hostname.length - domain.length);\n}\nfunction isThirdParty(hostname, domain, sourceHostname, sourceDomain, type) {\n    if (type === 'main_frame' || type === 'mainFrame') {\n        return false;\n    }\n    else if (domain.length !== 0 && sourceDomain.length !== 0) {\n        return domain !== sourceDomain;\n    }\n    else if (domain.length !== 0 && sourceHostname.length !== 0) {\n        return domain !== sourceHostname;\n    }\n    else if (sourceDomain.length !== 0 && hostname.length !== 0) {\n        return hostname !== sourceDomain;\n    }\n    return false;\n}\nexport default class Request {\n    /**\n     * Create an instance of `Request` from raw request details.\n     */\n    static fromRawDetails({ requestId = '0', tabId = 0, url = '', hostname, domain, sourceUrl = '', sourceHostname, sourceDomain, type = 'main_frame', _originalRequestDetails, }) {\n        url = url.toLowerCase();\n        if (hostname === undefined || domain === undefined) {\n            const parsed = parse(url, TLDTS_OPTIONS);\n            hostname = hostname || parsed.hostname || '';\n            domain = domain || parsed.domain || '';\n        }\n        // Initialize source URL\n        if (sourceHostname === undefined || sourceDomain === undefined) {\n            const parsed = parse(sourceHostname || sourceDomain || sourceUrl, TLDTS_OPTIONS);\n            sourceHostname = sourceHostname || parsed.hostname || '';\n            sourceDomain = sourceDomain || parsed.domain || sourceHostname || '';\n        }\n        return new Request({\n            requestId,\n            tabId,\n            domain,\n            hostname,\n            url,\n            sourceDomain,\n            sourceHostname,\n            sourceUrl,\n            type,\n            _originalRequestDetails,\n        });\n    }\n    constructor({ requestId, tabId, type, domain, hostname, url, sourceDomain, sourceHostname, _originalRequestDetails, }) {\n        // Lazy attributes\n        this.tokens = undefined;\n        this.hostnameHashes = undefined;\n        this.entityHashes = undefined;\n        this._originalRequestDetails = _originalRequestDetails;\n        this.id = requestId;\n        this.tabId = tabId;\n        this.type = type;\n        this.url = url;\n        this.hostname = hostname;\n        this.domain = domain;\n        this.sourceHostnameHashes =\n            sourceHostname.length === 0\n                ? EMPTY_UINT32_ARRAY\n                : getHostnameHashesFromLabelsBackward(sourceHostname, sourceDomain);\n        this.sourceEntityHashes =\n            sourceHostname.length === 0\n                ? EMPTY_UINT32_ARRAY\n                : getEntityHashesFromLabelsBackward(sourceHostname, sourceDomain);\n        // Decide on partiness\n        this.isThirdParty = isThirdParty(hostname, domain, sourceHostname, sourceDomain, type);\n        this.isFirstParty = !this.isThirdParty;\n        // Check protocol\n        this.isSupported = true;\n        if (this.type === 'websocket' || this.url.startsWith('ws:') || this.url.startsWith('wss:')) {\n            this.isHttp = false;\n            this.isHttps = false;\n            this.type = 'websocket';\n            this.isSupported = true;\n        }\n        else if (this.url.startsWith('http:')) {\n            this.isHttp = true;\n            this.isHttps = false;\n        }\n        else if (this.url.startsWith('https:')) {\n            this.isHttps = true;\n            this.isHttp = false;\n        }\n        else if (this.url.startsWith('data:')) {\n            this.isHttp = false;\n            this.isHttps = false;\n            // Only keep prefix of URL\n            const indexOfComa = this.url.indexOf(',');\n            if (indexOfComa !== -1) {\n                this.url = this.url.slice(0, indexOfComa);\n            }\n        }\n        else {\n            this.isHttp = false;\n            this.isHttps = false;\n            this.isSupported = false;\n        }\n    }\n    getHostnameHashes() {\n        if (this.hostnameHashes === undefined) {\n            this.hostnameHashes =\n                this.hostname.length === 0\n                    ? EMPTY_UINT32_ARRAY\n                    : getHostnameHashesFromLabelsBackward(this.hostname, this.domain);\n        }\n        return this.hostnameHashes;\n    }\n    getEntityHashes() {\n        if (this.entityHashes === undefined) {\n            this.entityHashes =\n                this.hostname.length === 0\n                    ? EMPTY_UINT32_ARRAY\n                    : getEntityHashesFromLabelsBackward(this.hostname, this.domain);\n        }\n        return this.entityHashes;\n    }\n    getTokens() {\n        if (this.tokens === undefined) {\n            TOKENS_BUFFER.reset();\n            for (const hash of this.sourceHostnameHashes) {\n                TOKENS_BUFFER.push(hash);\n            }\n            // Add token corresponding to request type\n            TOKENS_BUFFER.push(NORMALIZED_TYPE_TOKEN[this.type]);\n            tokenizeNoSkipInPlace(this.url, TOKENS_BUFFER);\n            this.tokens = TOKENS_BUFFER.slice();\n        }\n        return this.tokens;\n    }\n    isMainFrame() {\n        return this.type === 'main_frame' || this.type === 'mainFrame';\n    }\n    isSubFrame() {\n        return this.type === 'sub_frame' || this.type === 'subFrame';\n    }\n    /**\n     * Calling this method will attempt to guess the type of a request based on\n     * information found in `url` only. This can be useful to try and fine-tune\n     * the type of a Request when it is not otherwise available or if it was\n     * inferred as 'other'.\n     */\n    guessTypeOfRequest() {\n        const currentType = this.type;\n        this.type = guessUrlType(this.url);\n        if (currentType !== this.type) {\n            this.tokens = undefined;\n        }\n        return this.type;\n    }\n}\n/**\n * Kept for backward compatibility. The recommended way is to call\n * `Request.fromRawDetails` directly.\n */\nexport function makeRequest(details) {\n    return Request.fromRawDetails(details);\n}\n//# sourceMappingURL=request.js.map"],"names":["fastHash","HASH_SEED","HASH_INTERNAL_MULT","TOKENS_BUFFER","EMPTY_UINT32_ARRAY","parse","tokenizeNoSkipInPlace"],"mappings":"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"}