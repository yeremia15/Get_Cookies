{"version":3,"file":"engine.cjs","sources":["../../../src/src/engine/engine.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport Config from '../config';\nimport { StaticDataView, sizeOfASCII, sizeOfByte, sizeOfBool } from '../data-view';\nimport { EventEmitter } from '../events';\nimport { adsAndTrackingLists, adsLists, fetchLists, fetchResources, fullLists, } from '../fetch';\nimport { block } from '../filters/dsl';\nimport { parseFilters } from '../lists';\nimport Request from '../request';\nimport Resources from '../resources';\nimport CosmeticFilterBucket from './bucket/cosmetic';\nimport NetworkFilterBucket from './bucket/network';\nimport { Metadata } from './metadata';\nimport Preprocessor, { Env } from '../preprocessor';\nimport PreprocessorBucket from './bucket/preprocessor';\nexport const ENGINE_VERSION = 654;\nfunction shouldApplyHideException(filters) {\n    if (filters.length === 0) {\n        return false;\n    }\n    // Get $Xhide filter with highest priority:\n    // $Xhide,important > $Xhide > @@$Xhide\n    let genericHideFilter;\n    let currentScore = 0;\n    for (const filter of filters) {\n        // To encode priority between filters, we create a bitmask with the following:\n        // $important,Xhide = 100 (takes precedence)\n        // $Xhide           = 010 (exception to @@$Xhide)\n        // @@$Xhide         = 001 (forbids Xhide filters)\n        const score = (filter.isImportant() ? 4 : 0) | (filter.isException() ? 1 : 2);\n        // Highest `score` has precedence\n        if (score >= currentScore) {\n            currentScore = score;\n            genericHideFilter = filter;\n        }\n    }\n    if (genericHideFilter === undefined) {\n        return false;\n    }\n    // Check that there is at least one $generichide match and no exception\n    return genericHideFilter.isException();\n}\nexport default class FilterEngine extends EventEmitter {\n    static fromCached(init, caching) {\n        if (caching === undefined) {\n            return init();\n        }\n        const { path, read, write } = caching;\n        return read(path)\n            .then((buffer) => this.deserialize(buffer))\n            .catch(() => init().then((engine) => write(path, engine.serialize()).then(() => engine)));\n    }\n    static empty(config = {}) {\n        return new this({ config });\n    }\n    /**\n     * Create an instance of `FiltersEngine` (or subclass like `ElectronBlocker`,\n     * etc.), from the list of subscriptions provided as argument (e.g.:\n     * EasyList).\n     *\n     * Lists are fetched using the instance of `fetch` provided as a first\n     * argument. Optionally resources.txt and config can be provided.\n     */\n    static fromLists(fetch, urls, config = {}, caching) {\n        return this.fromCached(() => {\n            const listsPromises = fetchLists(fetch, urls);\n            const resourcesPromise = fetchResources(fetch);\n            return Promise.all([listsPromises, resourcesPromise]).then(([lists, resources]) => {\n                const engine = this.parse(lists.join('\\n'), config);\n                if (resources !== undefined) {\n                    engine.updateResources(resources, '' + resources.length);\n                }\n                return engine;\n            });\n        }, caching);\n    }\n    /**\n     * Initialize blocker of *ads only*.\n     *\n     * Attempt to initialize a blocking engine using a pre-built version served\n     * from Cliqz's CDN. If this fails (e.g.: if no pre-built engine is available\n     * for this version of the library), then falls-back to using `fromLists(...)`\n     * method with the same subscriptions.\n     */\n    static fromPrebuiltAdsOnly(fetchImpl = fetch, caching) {\n        return this.fromLists(fetchImpl, adsLists, {}, caching);\n    }\n    /**\n     * Same as `fromPrebuiltAdsOnly(...)` but also contains rules to block\n     * tracking (i.e.: using extra lists such as EasyPrivacy and more).\n     */\n    static fromPrebuiltAdsAndTracking(fetchImpl = fetch, caching) {\n        return this.fromLists(fetchImpl, adsAndTrackingLists, {}, caching);\n    }\n    /**\n     * Same as `fromPrebuiltAdsAndTracking(...)` but also contains annoyances\n     * rules to block things like cookie notices.\n     */\n    static fromPrebuiltFull(fetchImpl = fetch, caching) {\n        return this.fromLists(fetchImpl, fullLists, {}, caching);\n    }\n    static fromTrackerDB(rawJsonDump, options = {}) {\n        const config = new Config(options);\n        const metadata = new Metadata(rawJsonDump);\n        const filters = [];\n        for (const pattern of metadata.getPatterns()) {\n            filters.push(...pattern.filters);\n        }\n        const engine = this.parse(filters.join('\\n'), config);\n        engine.metadata = metadata;\n        return engine;\n    }\n    static parse(filters, options = {}) {\n        const config = new Config(options);\n        return new this(Object.assign(Object.assign({}, parseFilters(filters, config)), { config }));\n    }\n    static deserialize(serialized) {\n        const buffer = StaticDataView.fromUint8Array(serialized, {\n            enableCompression: false,\n        });\n        // Before starting deserialization, we make sure that the version of the\n        // serialized engine is the same as the current source code. If not, we\n        // start fresh and create a new engine from the lists.\n        const serializedEngineVersion = buffer.getUint16();\n        if (ENGINE_VERSION !== serializedEngineVersion) {\n            throw new Error(`serialized engine version mismatch, expected ${ENGINE_VERSION} but got ${serializedEngineVersion}`);\n        }\n        // Create a new engine with same options\n        const config = Config.deserialize(buffer);\n        // Optionally turn compression ON\n        if (config.enableCompression) {\n            buffer.enableCompression();\n        }\n        // Also make sure that the built-in checksum is correct. This allows to\n        // detect data corruption and start fresh if the serialized version was\n        // altered.\n        if (config.integrityCheck) {\n            const currentPos = buffer.pos;\n            buffer.pos = serialized.length - 4;\n            const checksum = buffer.checksum();\n            const expected = buffer.getUint32();\n            if (checksum !== expected) {\n                throw new Error(`serialized engine checksum mismatch, expected ${expected} but got ${checksum}`);\n            }\n            buffer.pos = currentPos;\n        }\n        const engine = new this({ config });\n        // Deserialize resources\n        engine.resources = Resources.deserialize(buffer);\n        // Deserialize lists\n        const lists = new Map();\n        const numberOfLists = buffer.getUint16();\n        for (let i = 0; i < numberOfLists; i += 1) {\n            lists.set(buffer.getASCII(), buffer.getASCII());\n        }\n        engine.lists = lists;\n        // Deserialize preprocessors\n        engine.preprocessors = PreprocessorBucket.deserialize(buffer);\n        // Deserialize buckets\n        engine.importants = NetworkFilterBucket.deserialize(buffer, config);\n        engine.redirects = NetworkFilterBucket.deserialize(buffer, config);\n        engine.filters = NetworkFilterBucket.deserialize(buffer, config);\n        engine.exceptions = NetworkFilterBucket.deserialize(buffer, config);\n        engine.csp = NetworkFilterBucket.deserialize(buffer, config);\n        engine.cosmetics = CosmeticFilterBucket.deserialize(buffer, config);\n        engine.hideExceptions = NetworkFilterBucket.deserialize(buffer, config);\n        // Optionally deserialize metadata\n        const hasMetadata = buffer.getBool();\n        if (hasMetadata) {\n            engine.metadata = Metadata.deserialize(buffer);\n        }\n        buffer.seekZero();\n        return engine;\n    }\n    constructor({ \n    // Optionally initialize the engine with filters\n    cosmeticFilters = [], networkFilters = [], preprocessors = [], config = new Config(), lists = new Map(), } = {}) {\n        super(); // init super-class EventEmitter\n        this.config = new Config(config);\n        // Subscription management: disabled by default\n        this.lists = lists;\n        // Preprocessors\n        this.preprocessors = new PreprocessorBucket({});\n        // $csp=\n        this.csp = new NetworkFilterBucket({ config: this.config });\n        // $elemhide\n        // $generichide\n        // $specifichide\n        this.hideExceptions = new NetworkFilterBucket({ config: this.config });\n        // @@filter\n        this.exceptions = new NetworkFilterBucket({ config: this.config });\n        // $important\n        this.importants = new NetworkFilterBucket({ config: this.config });\n        // $redirect\n        this.redirects = new NetworkFilterBucket({ config: this.config });\n        // All other filters\n        this.filters = new NetworkFilterBucket({ config: this.config });\n        // Cosmetic filters\n        this.cosmetics = new CosmeticFilterBucket({ config: this.config });\n        // Injections\n        this.resources = new Resources();\n        if (networkFilters.length !== 0 || cosmeticFilters.length !== 0) {\n            this.update({\n                newCosmeticFilters: cosmeticFilters,\n                newNetworkFilters: networkFilters,\n                newPreprocessors: preprocessors,\n            });\n        }\n    }\n    isFilterExcluded(filter) {\n        return this.preprocessors.isFilterExcluded(filter);\n    }\n    updateEnv(env) {\n        this.preprocessors.updateEnv(env);\n    }\n    /**\n     * Estimate the number of bytes needed to serialize this instance of\n     * `FiltersEngine` using the `serialize(...)` method. It is used internally\n     * by `serialize(...)` to allocate a buffer of the right size and you should\n     * not have to call it yourself most of the time.\n     *\n     * There are cases where we cannot estimate statically the exact size of the\n     * resulting buffer (due to alignement which needs to be performed); this\n     * method will return a safe estimate which will always be at least equal to\n     * the real number of bytes needed, or bigger (usually of a few bytes only:\n     * ~20 bytes is to be expected).\n     */\n    getSerializedSize() {\n        let estimatedSize = sizeOfByte() + // engine version\n            this.config.getSerializedSize() +\n            this.resources.getSerializedSize() +\n            this.preprocessors.getSerializedSize() +\n            this.filters.getSerializedSize() +\n            this.exceptions.getSerializedSize() +\n            this.importants.getSerializedSize() +\n            this.redirects.getSerializedSize() +\n            this.csp.getSerializedSize() +\n            this.cosmetics.getSerializedSize() +\n            this.hideExceptions.getSerializedSize() +\n            4; // checksum\n        // Estimate size of `this.lists` which stores information of checksum for each list.\n        for (const [name, checksum] of this.lists) {\n            estimatedSize += sizeOfASCII(name) + sizeOfASCII(checksum);\n        }\n        estimatedSize += sizeOfBool();\n        if (this.metadata !== undefined) {\n            estimatedSize += this.metadata.getSerializedSize();\n        }\n        return estimatedSize;\n    }\n    /**\n     * Creates a binary representation of the full engine. It can be stored\n     * on-disk for faster loading of the adblocker. The `deserialize` static\n     * method of Engine can be used to restore the engine.\n     */\n    serialize(array) {\n        const buffer = StaticDataView.fromUint8Array(array || new Uint8Array(this.getSerializedSize()), this.config);\n        buffer.pushUint16(ENGINE_VERSION);\n        // Config\n        this.config.serialize(buffer);\n        // Resources (js, resources)\n        this.resources.serialize(buffer);\n        // Serialize the state of lists (names and checksums)\n        buffer.pushUint16(this.lists.size);\n        for (const [name, value] of Array.from(this.lists.entries()).sort()) {\n            buffer.pushASCII(name);\n            buffer.pushASCII(value);\n        }\n        // Preprocessors\n        this.preprocessors.serialize(buffer);\n        // Filters buckets\n        this.importants.serialize(buffer);\n        this.redirects.serialize(buffer);\n        this.filters.serialize(buffer);\n        this.exceptions.serialize(buffer);\n        this.csp.serialize(buffer);\n        this.cosmetics.serialize(buffer);\n        this.hideExceptions.serialize(buffer);\n        // Optionally serialize metadata\n        buffer.pushBool(this.metadata !== undefined);\n        if (this.metadata !== undefined) {\n            this.metadata.serialize(buffer);\n        }\n        // Optionally append a checksum at the end\n        if (this.config.integrityCheck) {\n            buffer.pushUint32(buffer.checksum());\n        }\n        return buffer.subarray();\n    }\n    /**\n     * Update engine with new filters or resources.\n     */\n    loadedLists() {\n        return Array.from(this.lists.keys());\n    }\n    hasList(name, checksum) {\n        return this.lists.has(name) && this.lists.get(name) === checksum;\n    }\n    /**\n     * Update engine with `resources.txt` content.\n     */\n    updateResources(data, checksum) {\n        if (this.resources.checksum === checksum) {\n            return false;\n        }\n        this.resources = Resources.parse(data, { checksum });\n        return true;\n    }\n    getFilters() {\n        const cosmeticFilters = [];\n        const networkFilters = [];\n        return {\n            cosmeticFilters: cosmeticFilters.concat(this.cosmetics.getFilters()),\n            networkFilters: networkFilters.concat(this.filters.getFilters(), this.exceptions.getFilters(), this.importants.getFilters(), this.redirects.getFilters(), this.csp.getFilters(), this.hideExceptions.getFilters()),\n        };\n    }\n    /**\n     * Update engine with new filters as well as optionally removed filters.\n     */\n    update({ newNetworkFilters = [], newCosmeticFilters = [], newPreprocessors = [], removedCosmeticFilters = [], removedNetworkFilters = [], removedPreprocessors = [], }, env = new Env()) {\n        let updated = false;\n        // Update preprocessors\n        if (this.config.loadPreprocessors &&\n            (newPreprocessors.length !== 0 || removedPreprocessors.length !== 0)) {\n            updated = true;\n            this.preprocessors.update({\n                added: newPreprocessors,\n                removed: removedPreprocessors,\n            }, env);\n        }\n        // Update cosmetic filters\n        if (this.config.loadCosmeticFilters &&\n            (newCosmeticFilters.length !== 0 || removedCosmeticFilters.length !== 0)) {\n            updated = true;\n            this.cosmetics.update(newCosmeticFilters, removedCosmeticFilters.length === 0 ? undefined : new Set(removedCosmeticFilters), this.config);\n        }\n        // Update network filters\n        if (this.config.loadNetworkFilters &&\n            (newNetworkFilters.length !== 0 || removedNetworkFilters.length !== 0)) {\n            updated = true;\n            const filters = [];\n            const csp = [];\n            const exceptions = [];\n            const importants = [];\n            const redirects = [];\n            const hideExceptions = [];\n            for (const filter of newNetworkFilters) {\n                // NOTE: it's important to check for $generichide, $elemhide,\n                // $specifichide and $csp before exceptions and important as we store\n                // all of them in the same filter bucket. The check for exceptions is\n                // done at match-time directly.\n                if (filter.isCSP()) {\n                    csp.push(filter);\n                }\n                else if (filter.isGenericHide() || filter.isSpecificHide()) {\n                    hideExceptions.push(filter);\n                }\n                else if (filter.isException()) {\n                    exceptions.push(filter);\n                }\n                else if (filter.isImportant()) {\n                    importants.push(filter);\n                }\n                else if (filter.isRedirect()) {\n                    redirects.push(filter);\n                }\n                else {\n                    filters.push(filter);\n                }\n            }\n            const removedNetworkFiltersSet = removedNetworkFilters.length === 0 ? undefined : new Set(removedNetworkFilters);\n            // Update buckets in-place\n            this.importants.update(importants, removedNetworkFiltersSet);\n            this.redirects.update(redirects, removedNetworkFiltersSet);\n            this.filters.update(filters, removedNetworkFiltersSet);\n            if (this.config.loadExceptionFilters === true) {\n                this.exceptions.update(exceptions, removedNetworkFiltersSet);\n            }\n            if (this.config.loadCSPFilters === true) {\n                this.csp.update(csp, removedNetworkFiltersSet);\n            }\n            this.hideExceptions.update(hideExceptions, removedNetworkFiltersSet);\n        }\n        return updated;\n    }\n    updateFromDiff({ added, removed, preprocessors }, env) {\n        const newCosmeticFilters = [];\n        const newNetworkFilters = [];\n        const newPreprocessors = [];\n        const removedCosmeticFilters = [];\n        const removedNetworkFilters = [];\n        const removedPreprocessors = [];\n        if (removed !== undefined && removed.length !== 0) {\n            const { networkFilters, cosmeticFilters } = parseFilters(removed.join('\\n'), this.config);\n            Array.prototype.push.apply(removedCosmeticFilters, cosmeticFilters);\n            Array.prototype.push.apply(removedNetworkFilters, networkFilters);\n        }\n        if (added !== undefined && added.length !== 0) {\n            const { networkFilters, cosmeticFilters } = parseFilters(added.join('\\n'), this.config);\n            Array.prototype.push.apply(newCosmeticFilters, cosmeticFilters);\n            Array.prototype.push.apply(newNetworkFilters, networkFilters);\n        }\n        if (preprocessors !== undefined) {\n            for (const [condition, details] of Object.entries(preprocessors)) {\n                if (details.removed !== undefined && details.removed.length !== 0) {\n                    const { networkFilters, cosmeticFilters } = parseFilters(details.removed.join('\\n'), this.config);\n                    const filterIDs = new Set([]\n                        .concat(cosmeticFilters.map((filter) => filter.getId()))\n                        .concat(networkFilters.map((filter) => filter.getId())));\n                    removedPreprocessors.push(new Preprocessor({\n                        condition,\n                        filterIDs,\n                    }));\n                }\n                if (details.added !== undefined && details.added.length !== 0) {\n                    const { networkFilters, cosmeticFilters } = parseFilters(details.added.join('\\n'), this.config);\n                    const filterIDs = new Set([]\n                        .concat(cosmeticFilters.map((filter) => filter.getId()))\n                        .concat(networkFilters.map((filter) => filter.getId())));\n                    newPreprocessors.push(new Preprocessor({\n                        condition,\n                        filterIDs,\n                    }));\n                }\n            }\n        }\n        return this.update({\n            newCosmeticFilters,\n            newNetworkFilters,\n            newPreprocessors,\n            removedCosmeticFilters: removedCosmeticFilters.map((f) => f.getId()),\n            removedNetworkFilters: removedNetworkFilters.map((f) => f.getId()),\n            removedPreprocessors,\n        }, env);\n    }\n    /**\n     * Return a list of HTML filtering rules.\n     */\n    getHtmlFilters({ \n    // Page information\n    url, hostname, domain, }) {\n        const htmlSelectors = [];\n        if (this.config.enableHtmlFiltering === false || this.config.loadCosmeticFilters === false) {\n            return htmlSelectors;\n        }\n        const rules = this.cosmetics.getHtmlRules({\n            domain: domain || '',\n            hostname,\n            isFilterExcluded: this.isFilterExcluded.bind(this),\n        });\n        for (const rule of rules) {\n            const extended = rule.getExtendedSelector();\n            if (extended !== undefined) {\n                htmlSelectors.push(extended);\n            }\n        }\n        if (htmlSelectors.length !== 0) {\n            this.emit('html-filtered', htmlSelectors, url);\n        }\n        return htmlSelectors;\n    }\n    /**\n     * Given `hostname` and `domain` of a page (or frame), return the list of\n     * styles and scripts to inject in the page.\n     */\n    getCosmeticsFilters({ \n    // Page information\n    url, hostname, domain, \n    // DOM information\n    classes, hrefs, ids, \n    // Allows to specify which rules to return\n    getBaseRules = true, getInjectionRules = true, getExtendedRules = true, getRulesFromDOM = true, getRulesFromHostname = true, }) {\n        if (this.config.loadCosmeticFilters === false) {\n            return {\n                active: false,\n                extended: [],\n                scripts: [],\n                styles: '',\n            };\n        }\n        let allowGenericHides = true;\n        let allowSpecificHides = true;\n        const exceptions = this.hideExceptions.matchAll(Request.fromRawDetails({\n            domain: domain || '',\n            hostname,\n            url,\n            sourceDomain: '',\n            sourceHostname: '',\n            sourceUrl: '',\n        }), this.isFilterExcluded.bind(this));\n        const genericHides = [];\n        const specificHides = [];\n        for (const filter of exceptions) {\n            if (filter.isElemHide()) {\n                allowGenericHides = false;\n                allowSpecificHides = false;\n                break;\n            }\n            if (filter.isSpecificHide()) {\n                specificHides.push(filter);\n            }\n            else if (filter.isGenericHide()) {\n                genericHides.push(filter);\n            }\n        }\n        if (allowGenericHides === true) {\n            allowGenericHides = shouldApplyHideException(genericHides) === false;\n        }\n        if (allowSpecificHides === true) {\n            allowSpecificHides = shouldApplyHideException(specificHides) === false;\n        }\n        // Lookup injections as well as stylesheets\n        const { injections, stylesheet, extended } = this.cosmetics.getCosmeticsFilters({\n            domain: domain || '',\n            hostname,\n            classes,\n            hrefs,\n            ids,\n            allowGenericHides,\n            allowSpecificHides,\n            getBaseRules,\n            getInjectionRules,\n            getExtendedRules,\n            getRulesFromDOM,\n            getRulesFromHostname,\n            isFilterExcluded: this.isFilterExcluded.bind(this),\n        });\n        // Perform interpolation for injected scripts\n        const scripts = [];\n        for (const injection of injections) {\n            const script = injection.getScript(this.resources.js);\n            if (script !== undefined) {\n                this.emit('script-injected', script, url);\n                scripts.push(script);\n            }\n        }\n        // Emit events\n        if (stylesheet.length !== 0) {\n            this.emit('style-injected', stylesheet, url);\n        }\n        return {\n            active: true,\n            extended,\n            scripts,\n            styles: stylesheet,\n        };\n    }\n    /**\n     * Given a `request`, return all matching network filters found in the engine.\n     */\n    matchAll(request) {\n        const filters = [];\n        if (request.isSupported) {\n            Array.prototype.push.apply(filters, this.importants.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.filters.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.exceptions.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.csp.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.hideExceptions.matchAll(request, this.isFilterExcluded.bind(this)));\n            Array.prototype.push.apply(filters, this.redirects.matchAll(request, this.isFilterExcluded.bind(this)));\n        }\n        return new Set(filters);\n    }\n    /**\n     * Given a \"main_frame\" request, check if some content security policies\n     * should be injected in the page.\n     */\n    getCSPDirectives(request) {\n        if (!this.config.loadNetworkFilters) {\n            return undefined;\n        }\n        if (request.isSupported !== true || request.isMainFrame() === false) {\n            return undefined;\n        }\n        const matches = this.csp.matchAll(request, this.isFilterExcluded.bind(this));\n        // No $csp filter found\n        if (matches.length === 0) {\n            return undefined;\n        }\n        // Collect all CSP directives and keep track of exceptions\n        const disabledCsp = new Set();\n        const enabledCsp = new Set();\n        for (const filter of matches) {\n            if (filter.isException()) {\n                if (filter.csp === undefined) {\n                    // All CSP directives are disabled for this site\n                    return undefined;\n                }\n                disabledCsp.add(filter.csp);\n            }\n            else {\n                enabledCsp.add(filter.csp);\n            }\n        }\n        // Combine all CSPs (except the black-listed ones)\n        const csps = Array.from(enabledCsp)\n            .filter((csp) => !disabledCsp.has(csp))\n            .join('; ') || undefined;\n        // Emit event\n        if (csps !== undefined) {\n            this.emit('csp-injected', csps, request);\n        }\n        return csps;\n    }\n    /**\n     * Decide if a network request (usually from WebRequest API) should be\n     * blocked, redirected or allowed.\n     */\n    match(request, withMetadata = false) {\n        const result = {\n            exception: undefined,\n            filter: undefined,\n            match: false,\n            redirect: undefined,\n            metadata: undefined,\n        };\n        if (!this.config.loadNetworkFilters) {\n            return result;\n        }\n        if (request.isSupported) {\n            // Check the filters in the following order:\n            // 1. $important (not subject to exceptions)\n            // 2. redirection ($redirect=resource)\n            // 3. normal filters\n            // 4. exceptions\n            result.filter = this.importants.match(request, this.isFilterExcluded.bind(this));\n            let redirectNone;\n            let redirectRule;\n            // If `result.filter` is `undefined`, it means there was no $important\n            // filter found so far. We look for a $redirect filter.  There is some\n            // extra logic to handle special cases like redirect-rule and\n            // redirect=none.\n            //\n            // * If redirect=none is found, then cancel all redirects.\n            // * Else if redirect-rule is found, only redirect if request would be blocked.\n            // * Else if redirect is found, redirect.\n            if (result.filter === undefined) {\n                const redirects = this.redirects.matchAll(request, this.isFilterExcluded.bind(this));\n                if (redirects.length !== 0) {\n                    for (const filter of redirects) {\n                        if (filter.getRedirect() === 'none') {\n                            redirectNone = filter;\n                        }\n                        else if (filter.isRedirectRule()) {\n                            redirectRule = filter;\n                        }\n                        else {\n                            result.filter = filter;\n                        }\n                    }\n                }\n                // If `result.filter` is still `undefined`, it means that there was no\n                // redirection rule triggered for the request. We look for a normal\n                // match.\n                if (result.filter === undefined) {\n                    result.filter = this.filters.match(request, this.isFilterExcluded.bind(this));\n                    // If we found a match, and a `$redirect-rule` as found previously,\n                    // then we transform the match into a redirect, following the\n                    // semantics of redirect-rule.\n                    if (redirectRule !== undefined && result.filter !== undefined) {\n                        result.filter = redirectRule;\n                    }\n                }\n                // If we found either a redirection rule or a normal match, then check\n                // for exceptions which could apply on the request and un-block it.\n                if (result.filter !== undefined) {\n                    result.exception = this.exceptions.match(request, this.isFilterExcluded.bind(this));\n                }\n            }\n            // If there was a redirect match and no exception was found, then we\n            // proceed and process the redirect rule. This means two things:\n            //\n            // 1. Check if a redirect=none rule was found, which acts as exception.\n            // 2. If no exception was found, prepare `result.redirect` response.\n            if (result.filter !== undefined &&\n                result.exception === undefined &&\n                result.filter.isRedirect()) {\n                if (redirectNone !== undefined) {\n                    result.exception = redirectNone;\n                }\n                else {\n                    result.redirect = this.resources.getResource(result.filter.getRedirect());\n                }\n            }\n        }\n        result.match = result.exception === undefined && result.filter !== undefined;\n        // Emit events if we found a match\n        if (result.exception !== undefined) {\n            this.emit('request-whitelisted', request, result);\n        }\n        else if (result.redirect !== undefined) {\n            this.emit('request-redirected', request, result);\n        }\n        else if (result.filter !== undefined) {\n            this.emit('request-blocked', request, result);\n        }\n        else {\n            this.emit('request-allowed', request, result);\n        }\n        if (withMetadata === true && result.filter !== undefined && this.metadata) {\n            result.metadata = this.metadata.fromFilter(result.filter);\n        }\n        return result;\n    }\n    getPatternMetadata(request, { getDomainMetadata = false } = {}) {\n        if (this.metadata === undefined) {\n            return [];\n        }\n        const seenPatterns = new Set();\n        const patterns = [];\n        for (const filter of this.matchAll(request)) {\n            for (const patternInfo of this.metadata.fromFilter(filter)) {\n                if (!seenPatterns.has(patternInfo.pattern.key)) {\n                    seenPatterns.add(patternInfo.pattern.key);\n                    patterns.push(patternInfo);\n                }\n            }\n        }\n        if (getDomainMetadata) {\n            for (const patternInfo of this.metadata.fromDomain(request.hostname)) {\n                if (!seenPatterns.has(patternInfo.pattern.key)) {\n                    seenPatterns.add(patternInfo.pattern.key);\n                    patterns.push(patternInfo);\n                }\n            }\n        }\n        return patterns;\n    }\n    blockScripts() {\n        this.updateFromDiff({\n            added: [block().scripts().redirectTo('javascript').toString()],\n        });\n        return this;\n    }\n    blockImages() {\n        this.updateFromDiff({\n            added: [block().images().redirectTo('png').toString()],\n        });\n        return this;\n    }\n    blockMedias() {\n        this.updateFromDiff({\n            added: [block().medias().redirectTo('mp4').toString()],\n        });\n        return this;\n    }\n    blockFrames() {\n        this.updateFromDiff({\n            added: [block().frames().redirectTo('html').toString()],\n        });\n        return this;\n    }\n    blockFonts() {\n        this.updateFromDiff({\n            added: [block().fonts().toString()],\n        });\n        return this;\n    }\n    blockStyles() {\n        this.updateFromDiff({\n            added: [block().styles().toString()],\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=engine.js.map"],"names":["EventEmitter","fetchLists","fetchResources","adsLists","adsAndTrackingLists","fullLists","config","Config","metadata","Metadata","parseFilters","StaticDataView","Resources","PreprocessorBucket","NetworkFilterBucket","CosmeticFilterBucket","sizeOfByte","sizeOfASCII","sizeOfBool","Env","Preprocessor","Request","block"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAcY,MAAC,cAAc,GAAG,IAAI;AAClC,SAAS,wBAAwB,CAAC,OAAO,EAAE;AAC3C,IAAI,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9B,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;AACA;AACA,IAAI,IAAI,iBAAiB,CAAC;AAC1B,IAAI,IAAI,YAAY,GAAG,CAAC,CAAC;AACzB,IAAI,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;AAClC;AACA;AACA;AACA;AACA,QAAQ,MAAM,KAAK,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACtF;AACA,QAAQ,IAAI,KAAK,IAAI,YAAY,EAAE;AACnC,YAAY,YAAY,GAAG,KAAK,CAAC;AACjC,YAAY,iBAAiB,GAAG,MAAM,CAAC;AACvC,SAAS;AACT,KAAK;AACL,IAAI,IAAI,iBAAiB,KAAK,SAAS,EAAE;AACzC,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;AACA,IAAI,OAAO,iBAAiB,CAAC,WAAW,EAAE,CAAC;AAC3C,CAAC;AACc,MAAM,YAAY,SAASA,mBAAY,CAAC;AACvD,IAAI,OAAO,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE;AACrC,QAAQ,IAAI,OAAO,KAAK,SAAS,EAAE;AACnC,YAAY,OAAO,IAAI,EAAE,CAAC;AAC1B,SAAS;AACT,QAAQ,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;AAC9C,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,aAAa,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACvD,aAAa,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC,CAAC,CAAC;AACtG,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE;AAC9B,QAAQ,OAAO,IAAI,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;AACpC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,GAAG,EAAE,EAAE,OAAO,EAAE;AACxD,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM;AACrC,YAAY,MAAM,aAAa,GAAGC,kBAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1D,YAAY,MAAM,gBAAgB,GAAGC,sBAAc,CAAC,KAAK,CAAC,CAAC;AAC3D,YAAY,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK;AAC/F,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;AACpE,gBAAgB,IAAI,SAAS,KAAK,SAAS,EAAE;AAC7C,oBAAoB,MAAM,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;AAC7E,iBAAiB;AACjB,gBAAgB,OAAO,MAAM,CAAC;AAC9B,aAAa,CAAC,CAAC;AACf,SAAS,EAAE,OAAO,CAAC,CAAC;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,mBAAmB,CAAC,SAAS,GAAG,KAAK,EAAE,OAAO,EAAE;AAC3D,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAEC,gBAAQ,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;AAChE,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,OAAO,0BAA0B,CAAC,SAAS,GAAG,KAAK,EAAE,OAAO,EAAE;AAClE,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAEC,2BAAmB,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;AAC3E,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,OAAO,gBAAgB,CAAC,SAAS,GAAG,KAAK,EAAE,OAAO,EAAE;AACxD,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAEC,iBAAS,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;AACjE,KAAK;AACL,IAAI,OAAO,aAAa,CAAC,WAAW,EAAE,OAAO,GAAG,EAAE,EAAE;AACpD,QAAQ,MAAMC,QAAM,GAAG,IAAIC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAQ,MAAMC,UAAQ,GAAG,IAAIC,iBAAQ,CAAC,WAAW,CAAC,CAAC;AACnD,QAAQ,MAAM,OAAO,GAAG,EAAE,CAAC;AAC3B,QAAQ,KAAK,MAAM,OAAO,IAAID,UAAQ,CAAC,WAAW,EAAE,EAAE;AACtD,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAEF,QAAM,CAAC,CAAC;AAC9D,QAAQ,MAAM,CAAC,QAAQ,GAAGE,UAAQ,CAAC;AACnC,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,OAAO,EAAE,OAAO,GAAG,EAAE,EAAE;AACxC,QAAQ,MAAMF,QAAM,GAAG,IAAIC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAQ,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAEG,kBAAY,CAAC,OAAO,EAAEJ,QAAM,CAAC,CAAC,EAAE,UAAEA,QAAM,EAAE,CAAC,CAAC,CAAC;AACrG,KAAK;AACL,IAAI,OAAO,WAAW,CAAC,UAAU,EAAE;AACnC,QAAQ,MAAM,MAAM,GAAGK,uBAAc,CAAC,cAAc,CAAC,UAAU,EAAE;AACjE,YAAY,iBAAiB,EAAE,KAAK;AACpC,SAAS,CAAC,CAAC;AACX;AACA;AACA;AACA,QAAQ,MAAM,uBAAuB,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AAC3D,QAAQ,IAAI,cAAc,KAAK,uBAAuB,EAAE;AACxD,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,6CAA6C,EAAE,cAAc,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC;AACjI,SAAS;AACT;AACA,QAAQ,MAAML,QAAM,GAAGC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAClD;AACA,QAAQ,IAAID,QAAM,CAAC,iBAAiB,EAAE;AACtC,YAAY,MAAM,CAAC,iBAAiB,EAAE,CAAC;AACvC,SAAS;AACT;AACA;AACA;AACA,QAAQ,IAAIA,QAAM,CAAC,cAAc,EAAE;AACnC,YAAY,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1C,YAAY,MAAM,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAC/C,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC/C,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AAChD,YAAY,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACvC,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,8CAA8C,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACjH,aAAa;AACb,YAAY,MAAM,CAAC,GAAG,GAAG,UAAU,CAAC;AACpC,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,UAAEA,QAAM,EAAE,CAAC,CAAC;AAC5C;AACA,QAAQ,MAAM,CAAC,SAAS,GAAGM,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACzD;AACA,QAAQ,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAChC,QAAQ,MAAM,aAAa,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AACjD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,IAAI,CAAC,EAAE;AACnD,YAAY,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5D,SAAS;AACT,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AAC7B;AACA,QAAQ,MAAM,CAAC,aAAa,GAAGC,YAAkB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACtE;AACA,QAAQ,MAAM,CAAC,UAAU,GAAGC,OAAmB,CAAC,WAAW,CAAC,MAAM,EAAER,QAAM,CAAC,CAAC;AAC5E,QAAQ,MAAM,CAAC,SAAS,GAAGQ,OAAmB,CAAC,WAAW,CAAC,MAAM,EAAER,QAAM,CAAC,CAAC;AAC3E,QAAQ,MAAM,CAAC,OAAO,GAAGQ,OAAmB,CAAC,WAAW,CAAC,MAAM,EAAER,QAAM,CAAC,CAAC;AACzE,QAAQ,MAAM,CAAC,UAAU,GAAGQ,OAAmB,CAAC,WAAW,CAAC,MAAM,EAAER,QAAM,CAAC,CAAC;AAC5E,QAAQ,MAAM,CAAC,GAAG,GAAGQ,OAAmB,CAAC,WAAW,CAAC,MAAM,EAAER,QAAM,CAAC,CAAC;AACrE,QAAQ,MAAM,CAAC,SAAS,GAAGS,gBAAoB,CAAC,WAAW,CAAC,MAAM,EAAET,QAAM,CAAC,CAAC;AAC5E,QAAQ,MAAM,CAAC,cAAc,GAAGQ,OAAmB,CAAC,WAAW,CAAC,MAAM,EAAER,QAAM,CAAC,CAAC;AAChF;AACA,QAAQ,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;AAC7C,QAAQ,IAAI,WAAW,EAAE;AACzB,YAAY,MAAM,CAAC,QAAQ,GAAGG,iBAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC3D,SAAS;AACT,QAAQ,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC1B,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,WAAW,CAAC;AAChB;AACA,IAAI,eAAe,GAAG,EAAE,EAAE,cAAc,GAAG,EAAE,EAAE,aAAa,GAAG,EAAE,UAAEH,QAAM,GAAG,IAAIC,MAAM,EAAE,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE;AACrH,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAIA,MAAM,CAACD,QAAM,CAAC,CAAC;AACzC;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAIO,YAAkB,CAAC,EAAE,CAAC,CAAC;AACxD;AACA,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAIC,OAAmB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACpE;AACA;AACA;AACA,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAIA,OAAmB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC/E;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAIA,OAAmB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3E;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAIA,OAAmB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3E;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAIA,OAAmB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC1E;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAIA,OAAmB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACxE;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAIC,gBAAoB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3E;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAIH,SAAS,EAAE,CAAC;AACzC,QAAQ,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;AACzE,YAAY,IAAI,CAAC,MAAM,CAAC;AACxB,gBAAgB,kBAAkB,EAAE,eAAe;AACnD,gBAAgB,iBAAiB,EAAE,cAAc;AACjD,gBAAgB,gBAAgB,EAAE,aAAa;AAC/C,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK;AACL,IAAI,gBAAgB,CAAC,MAAM,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC3D,KAAK;AACL,IAAI,SAAS,CAAC,GAAG,EAAE;AACnB,QAAQ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC1C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,aAAa,GAAGI,mBAAU,EAAE;AACxC,YAAY,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;AAC3C,YAAY,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;AAC9C,YAAY,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE;AAClD,YAAY,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;AAC5C,YAAY,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE;AAC/C,YAAY,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE;AAC/C,YAAY,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;AAC9C,YAAY,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE;AACxC,YAAY,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;AAC9C,YAAY,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;AACnD,YAAY,CAAC,CAAC;AACd;AACA,QAAQ,KAAK,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;AACnD,YAAY,aAAa,IAAIC,oBAAW,CAAC,IAAI,CAAC,GAAGA,oBAAW,CAAC,QAAQ,CAAC,CAAC;AACvE,SAAS;AACT,QAAQ,aAAa,IAAIC,mBAAU,EAAE,CAAC;AACtC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;AACzC,YAAY,aAAa,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;AAC/D,SAAS;AACT,QAAQ,OAAO,aAAa,CAAC;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,KAAK,EAAE;AACrB,QAAQ,MAAM,MAAM,GAAGP,uBAAc,CAAC,cAAc,CAAC,KAAK,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACrH,QAAQ,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAC1C;AACA,QAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACtC;AACA,QAAQ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACzC;AACA,QAAQ,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3C,QAAQ,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;AAC7E,YAAY,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACnC,YAAY,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACpC,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC7C;AACA,QAAQ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACzC,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACzC,QAAQ,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC9C;AACA,QAAQ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC;AACrD,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;AACzC,YAAY,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC5C,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AACxC,YAAY,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjD,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7C,KAAK;AACL,IAAI,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE;AAC5B,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC;AACzE,KAAK;AACL;AACA;AACA;AACA,IAAI,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE;AACpC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,KAAK,QAAQ,EAAE;AAClD,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QAAQ,IAAI,CAAC,SAAS,GAAGC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC7D,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,UAAU,GAAG;AACjB,QAAQ,MAAM,eAAe,GAAG,EAAE,CAAC;AACnC,QAAQ,MAAM,cAAc,GAAG,EAAE,CAAC;AAClC,QAAQ,OAAO;AACf,YAAY,eAAe,EAAE,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;AAChF,YAAY,cAAc,EAAE,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;AAC9N,SAAS,CAAC;AACV,KAAK;AACL;AACA;AACA;AACA,IAAI,MAAM,CAAC,EAAE,iBAAiB,GAAG,EAAE,EAAE,kBAAkB,GAAG,EAAE,EAAE,gBAAgB,GAAG,EAAE,EAAE,sBAAsB,GAAG,EAAE,EAAE,qBAAqB,GAAG,EAAE,EAAE,oBAAoB,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,IAAIO,kBAAG,EAAE,EAAE;AAC7L,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;AAC5B;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB;AACzC,aAAa,gBAAgB,CAAC,MAAM,KAAK,CAAC,IAAI,oBAAoB,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;AAClF,YAAY,OAAO,GAAG,IAAI,CAAC;AAC3B,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;AACtC,gBAAgB,KAAK,EAAE,gBAAgB;AACvC,gBAAgB,OAAO,EAAE,oBAAoB;AAC7C,aAAa,EAAE,GAAG,CAAC,CAAC;AACpB,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB;AAC3C,aAAa,kBAAkB,CAAC,MAAM,KAAK,CAAC,IAAI,sBAAsB,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;AACtF,YAAY,OAAO,GAAG,IAAI,CAAC;AAC3B,YAAY,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,GAAG,IAAI,GAAG,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACtJ,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB;AAC1C,aAAa,iBAAiB,CAAC,MAAM,KAAK,CAAC,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;AACpF,YAAY,OAAO,GAAG,IAAI,CAAC;AAC3B,YAAY,MAAM,OAAO,GAAG,EAAE,CAAC;AAC/B,YAAY,MAAM,GAAG,GAAG,EAAE,CAAC;AAC3B,YAAY,MAAM,UAAU,GAAG,EAAE,CAAC;AAClC,YAAY,MAAM,UAAU,GAAG,EAAE,CAAC;AAClC,YAAY,MAAM,SAAS,GAAG,EAAE,CAAC;AACjC,YAAY,MAAM,cAAc,GAAG,EAAE,CAAC;AACtC,YAAY,KAAK,MAAM,MAAM,IAAI,iBAAiB,EAAE;AACpD;AACA;AACA;AACA;AACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE;AACpC,oBAAoB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrC,iBAAiB;AACjB,qBAAqB,IAAI,MAAM,CAAC,aAAa,EAAE,IAAI,MAAM,CAAC,cAAc,EAAE,EAAE;AAC5E,oBAAoB,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChD,iBAAiB;AACjB,qBAAqB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;AAC/C,oBAAoB,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,iBAAiB;AACjB,qBAAqB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;AAC/C,oBAAoB,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5C,iBAAiB;AACjB,qBAAqB,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;AAC9C,oBAAoB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAiB;AACjB,aAAa;AACb,YAAY,MAAM,wBAAwB,GAAG,qBAAqB,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,GAAG,IAAI,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAC7H;AACA,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,wBAAwB,CAAC,CAAC;AACzE,YAAY,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;AACvE,YAAY,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,wBAAwB,CAAC,CAAC;AACnE,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,KAAK,IAAI,EAAE;AAC3D,gBAAgB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,wBAAwB,CAAC,CAAC;AAC7E,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,KAAK,IAAI,EAAE;AACrD,gBAAgB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC;AAC/D,aAAa;AACb,YAAY,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,cAAc,EAAE,wBAAwB,CAAC,CAAC;AACjF,SAAS;AACT,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,IAAI,cAAc,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAE,EAAE,GAAG,EAAE;AAC3D,QAAQ,MAAM,kBAAkB,GAAG,EAAE,CAAC;AACtC,QAAQ,MAAM,iBAAiB,GAAG,EAAE,CAAC;AACrC,QAAQ,MAAM,gBAAgB,GAAG,EAAE,CAAC;AACpC,QAAQ,MAAM,sBAAsB,GAAG,EAAE,CAAC;AAC1C,QAAQ,MAAM,qBAAqB,GAAG,EAAE,CAAC;AACzC,QAAQ,MAAM,oBAAoB,GAAG,EAAE,CAAC;AACxC,QAAQ,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3D,YAAY,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,GAAGT,kBAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACtG,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,eAAe,CAAC,CAAC;AAChF,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,EAAE,cAAc,CAAC,CAAC;AAC9E,SAAS;AACT,QAAQ,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACvD,YAAY,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,GAAGA,kBAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACpG,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;AAC5E,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;AAC1E,SAAS;AACT,QAAQ,IAAI,aAAa,KAAK,SAAS,EAAE;AACzC,YAAY,KAAK,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;AAC9E,gBAAgB,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACnF,oBAAoB,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,GAAGA,kBAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACtH,oBAAoB,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,EAAE;AAChD,yBAAyB,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;AAChF,yBAAyB,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AACjF,oBAAoB,oBAAoB,CAAC,IAAI,CAAC,IAAIU,sBAAY,CAAC;AAC/D,wBAAwB,SAAS;AACjC,wBAAwB,SAAS;AACjC,qBAAqB,CAAC,CAAC,CAAC;AACxB,iBAAiB;AACjB,gBAAgB,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/E,oBAAoB,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,GAAGV,kBAAY,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACpH,oBAAoB,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,EAAE;AAChD,yBAAyB,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;AAChF,yBAAyB,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AACjF,oBAAoB,gBAAgB,CAAC,IAAI,CAAC,IAAIU,sBAAY,CAAC;AAC3D,wBAAwB,SAAS;AACjC,wBAAwB,SAAS;AACjC,qBAAqB,CAAC,CAAC,CAAC;AACxB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAY,kBAAkB;AAC9B,YAAY,iBAAiB;AAC7B,YAAY,gBAAgB;AAC5B,YAAY,sBAAsB,EAAE,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;AAChF,YAAY,qBAAqB,EAAE,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;AAC9E,YAAY,oBAAoB;AAChC,SAAS,EAAE,GAAG,CAAC,CAAC;AAChB,KAAK;AACL;AACA;AACA;AACA,IAAI,cAAc,CAAC;AACnB;AACA,IAAI,GAAG,EAAE,QAAQ,EAAE,MAAM,GAAG,EAAE;AAC9B,QAAQ,MAAM,aAAa,GAAG,EAAE,CAAC;AACjC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,KAAK,KAAK,EAAE;AACpG,YAAY,OAAO,aAAa,CAAC;AACjC,SAAS;AACT,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;AAClD,YAAY,MAAM,EAAE,MAAM,IAAI,EAAE;AAChC,YAAY,QAAQ;AACpB,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9D,SAAS,CAAC,CAAC;AACX,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClC,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACxD,YAAY,IAAI,QAAQ,KAAK,SAAS,EAAE;AACxC,gBAAgB,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;AACxC,YAAY,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;AAC3D,SAAS;AACT,QAAQ,OAAO,aAAa,CAAC;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,mBAAmB,CAAC;AACxB;AACA,IAAI,GAAG,EAAE,QAAQ,EAAE,MAAM;AACzB;AACA,IAAI,OAAO,EAAE,KAAK,EAAE,GAAG;AACvB;AACA,IAAI,YAAY,GAAG,IAAI,EAAE,iBAAiB,GAAG,IAAI,EAAE,gBAAgB,GAAG,IAAI,EAAE,eAAe,GAAG,IAAI,EAAE,oBAAoB,GAAG,IAAI,GAAG,EAAE;AACpI,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,KAAK,KAAK,EAAE;AACvD,YAAY,OAAO;AACnB,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,QAAQ,EAAE,EAAE;AAC5B,gBAAgB,OAAO,EAAE,EAAE;AAC3B,gBAAgB,MAAM,EAAE,EAAE;AAC1B,aAAa,CAAC;AACd,SAAS;AACT,QAAQ,IAAI,iBAAiB,GAAG,IAAI,CAAC;AACrC,QAAQ,IAAI,kBAAkB,GAAG,IAAI,CAAC;AACtC,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAACC,eAAO,CAAC,cAAc,CAAC;AAC/E,YAAY,MAAM,EAAE,MAAM,IAAI,EAAE;AAChC,YAAY,QAAQ;AACpB,YAAY,GAAG;AACf,YAAY,YAAY,EAAE,EAAE;AAC5B,YAAY,cAAc,EAAE,EAAE;AAC9B,YAAY,SAAS,EAAE,EAAE;AACzB,SAAS,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,QAAQ,MAAM,YAAY,GAAG,EAAE,CAAC;AAChC,QAAQ,MAAM,aAAa,GAAG,EAAE,CAAC;AACjC,QAAQ,KAAK,MAAM,MAAM,IAAI,UAAU,EAAE;AACzC,YAAY,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;AACrC,gBAAgB,iBAAiB,GAAG,KAAK,CAAC;AAC1C,gBAAgB,kBAAkB,GAAG,KAAK,CAAC;AAC3C,gBAAgB,MAAM;AACtB,aAAa;AACb,YAAY,IAAI,MAAM,CAAC,cAAc,EAAE,EAAE;AACzC,gBAAgB,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,aAAa;AACb,iBAAiB,IAAI,MAAM,CAAC,aAAa,EAAE,EAAE;AAC7C,gBAAgB,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,iBAAiB,KAAK,IAAI,EAAE;AACxC,YAAY,iBAAiB,GAAG,wBAAwB,CAAC,YAAY,CAAC,KAAK,KAAK,CAAC;AACjF,SAAS;AACT,QAAQ,IAAI,kBAAkB,KAAK,IAAI,EAAE;AACzC,YAAY,kBAAkB,GAAG,wBAAwB,CAAC,aAAa,CAAC,KAAK,KAAK,CAAC;AACnF,SAAS;AACT;AACA,QAAQ,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC;AACxF,YAAY,MAAM,EAAE,MAAM,IAAI,EAAE;AAChC,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB,YAAY,GAAG;AACf,YAAY,iBAAiB;AAC7B,YAAY,kBAAkB;AAC9B,YAAY,YAAY;AACxB,YAAY,iBAAiB;AAC7B,YAAY,gBAAgB;AAC5B,YAAY,eAAe;AAC3B,YAAY,oBAAoB;AAChC,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9D,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,MAAM,OAAO,GAAG,EAAE,CAAC;AAC3B,QAAQ,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;AAC5C,YAAY,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AAClE,YAAY,IAAI,MAAM,KAAK,SAAS,EAAE;AACtC,gBAAgB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AAC1D,gBAAgB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrC,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;AACrC,YAAY,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;AACzD,SAAS;AACT,QAAQ,OAAO;AACf,YAAY,MAAM,EAAE,IAAI;AACxB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,MAAM,EAAE,UAAU;AAC9B,SAAS,CAAC;AACV,KAAK;AACL;AACA;AACA;AACA,IAAI,QAAQ,CAAC,OAAO,EAAE;AACtB,QAAQ,MAAM,OAAO,GAAG,EAAE,CAAC;AAC3B,QAAQ,IAAI,OAAO,CAAC,WAAW,EAAE;AACjC,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrH,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClH,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrH,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9G,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzH,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpH,SAAS;AACT,QAAQ,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,OAAO,EAAE;AAC9B,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;AAC7C,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,QAAQ,IAAI,OAAO,CAAC,WAAW,KAAK,IAAI,IAAI,OAAO,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;AAC7E,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACrF;AACA,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;AACtC,QAAQ,MAAM,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;AACrC,QAAQ,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;AACtC,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;AACtC,gBAAgB,IAAI,MAAM,CAAC,GAAG,KAAK,SAAS,EAAE;AAC9C;AACA,oBAAoB,OAAO,SAAS,CAAC;AACrC,iBAAiB;AACjB,gBAAgB,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5C,aAAa;AACb,iBAAiB;AACjB,gBAAgB,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3C,aAAa;AACb,SAAS;AACT;AACA,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;AAC3C,aAAa,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnD,aAAa,IAAI,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC;AACrC;AACA,QAAQ,IAAI,IAAI,KAAK,SAAS,EAAE;AAChC,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACrD,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,OAAO,EAAE,YAAY,GAAG,KAAK,EAAE;AACzC,QAAQ,MAAM,MAAM,GAAG;AACvB,YAAY,SAAS,EAAE,SAAS;AAChC,YAAY,MAAM,EAAE,SAAS;AAC7B,YAAY,KAAK,EAAE,KAAK;AACxB,YAAY,QAAQ,EAAE,SAAS;AAC/B,YAAY,QAAQ,EAAE,SAAS;AAC/B,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;AAC7C,YAAY,OAAO,MAAM,CAAC;AAC1B,SAAS;AACT,QAAQ,IAAI,OAAO,CAAC,WAAW,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7F,YAAY,IAAI,YAAY,CAAC;AAC7B,YAAY,IAAI,YAAY,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AAC7C,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACrG,gBAAgB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5C,oBAAoB,KAAK,MAAM,MAAM,IAAI,SAAS,EAAE;AACpD,wBAAwB,IAAI,MAAM,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;AAC7D,4BAA4B,YAAY,GAAG,MAAM,CAAC;AAClD,yBAAyB;AACzB,6BAA6B,IAAI,MAAM,CAAC,cAAc,EAAE,EAAE;AAC1D,4BAA4B,YAAY,GAAG,MAAM,CAAC;AAClD,yBAAyB;AACzB,6BAA6B;AAC7B,4BAA4B,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;AACnD,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AACjD,oBAAoB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAClG;AACA;AACA;AACA,oBAAoB,IAAI,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AACnF,wBAAwB,MAAM,CAAC,MAAM,GAAG,YAAY,CAAC;AACrD,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,gBAAgB,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AACjD,oBAAoB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxG,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS;AAC3C,gBAAgB,MAAM,CAAC,SAAS,KAAK,SAAS;AAC9C,gBAAgB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE;AAC5C,gBAAgB,IAAI,YAAY,KAAK,SAAS,EAAE;AAChD,oBAAoB,MAAM,CAAC,SAAS,GAAG,YAAY,CAAC;AACpD,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;AAC9F,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,SAAS,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,CAAC;AACrF;AACA,QAAQ,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,EAAE;AAC5C,YAAY,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC9D,SAAS;AACT,aAAa,IAAI,MAAM,CAAC,QAAQ,KAAK,SAAS,EAAE;AAChD,YAAY,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC7D,SAAS;AACT,aAAa,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AAC9C,YAAY,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC1D,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC1D,SAAS;AACT,QAAQ,IAAI,YAAY,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnF,YAAY,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACtE,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,kBAAkB,CAAC,OAAO,EAAE,EAAE,iBAAiB,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;AACpE,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;AACzC,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ,MAAM,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;AACvC,QAAQ,MAAM,QAAQ,GAAG,EAAE,CAAC;AAC5B,QAAQ,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AACrD,YAAY,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AACxE,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAChE,oBAAoB,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC9D,oBAAoB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC/C,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,iBAAiB,EAAE;AAC/B,YAAY,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAClF,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAChE,oBAAoB,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC9D,oBAAoB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC/C,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL,IAAI,YAAY,GAAG;AACnB,QAAQ,IAAI,CAAC,cAAc,CAAC;AAC5B,YAAY,KAAK,EAAE,CAACC,SAAK,EAAE,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC1E,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,cAAc,CAAC;AAC5B,YAAY,KAAK,EAAE,CAACA,SAAK,EAAE,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;AAClE,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,cAAc,CAAC;AAC5B,YAAY,KAAK,EAAE,CAACA,SAAK,EAAE,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;AAClE,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,cAAc,CAAC;AAC5B,YAAY,KAAK,EAAE,CAACA,SAAK,EAAE,CAAC,MAAM,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AACnE,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,UAAU,GAAG;AACjB,QAAQ,IAAI,CAAC,cAAc,CAAC;AAC5B,YAAY,KAAK,EAAE,CAACA,SAAK,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC;AAC/C,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,cAAc,CAAC;AAC5B,YAAY,KAAK,EAAE,CAACA,SAAK,EAAE,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC;AAChD,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;;;;;"}