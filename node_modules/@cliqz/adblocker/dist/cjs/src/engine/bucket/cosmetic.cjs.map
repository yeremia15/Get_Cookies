{"version":3,"file":"cosmetic.cjs","sources":["../../../../src/src/engine/bucket/cosmetic.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/unbound-method */\n/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { compactTokens, concatTypedArrays } from '../../compact-set';\nimport CosmeticFilter, { DEFAULT_HIDDING_STYLE } from '../../filters/cosmetic';\nimport { getEntityHashesFromLabelsBackward, getHostnameHashesFromLabelsBackward, } from '../../request';\nimport { hashStrings, tokenizeNoSkip } from '../../utils';\nimport { noopOptimizeCosmetic } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n/**\n * Given a list of CSS selectors, create a valid stylesheet ready to be\n * injected in the page. This also takes care to no create rules with too many\n * selectors for Chrome, see: https://crbug.com/804179\n */\nexport function createStylesheet(rules, style) {\n    if (rules.length === 0) {\n        return '';\n    }\n    const maximumNumberOfSelectors = 1024;\n    const parts = [];\n    const styleStr = ` { ${style} }`;\n    for (let i = 0; i < rules.length; i += maximumNumberOfSelectors) {\n        // Accumulate up to `maximumNumberOfSelectors` selectors into `selector`.\n        // We use string concatenation here since it's faster than using\n        // `Array.prototype.join`.\n        let selector = rules[i];\n        for (let j = i + 1, end = Math.min(rules.length, i + maximumNumberOfSelectors); j < end; j += 1) {\n            selector += ',\\n' + rules[j];\n        }\n        // Insert CSS after last selector (e.g.: `{ display: none }`)\n        selector += styleStr;\n        // If `rules` has less than the limit, we can short-circuit here\n        if (rules.length < maximumNumberOfSelectors) {\n            return selector;\n        }\n        // Keep track of this chunk and process next ones\n        parts.push(selector);\n    }\n    // Join all chunks together\n    return parts.join('\\n');\n}\n/**\n * If at least one filter from `rules` has a custom style (e.g.: `##.foo\n * :style(...)`) then we fallback to `createStylesheetFromRulesWithCustomStyles`\n * which is slower than `createStylesheetFromRules`.\n */\nfunction createStylesheetFromRulesWithCustomStyles(rules) {\n    const selectorsPerStyle = new Map();\n    for (const rule of rules) {\n        const style = rule.getStyle();\n        const selectors = selectorsPerStyle.get(style);\n        if (selectors === undefined) {\n            selectorsPerStyle.set(style, [rule.getSelector()]);\n        }\n        else {\n            selectors.push(rule.getSelector());\n        }\n    }\n    const stylesheets = [];\n    const selectorsPerStyleArray = Array.from(selectorsPerStyle.entries());\n    for (const [style, selectors] of selectorsPerStyleArray) {\n        stylesheets.push(createStylesheet(selectors, style));\n    }\n    return stylesheets.join('\\n\\n');\n}\n/**\n * Given a list of cosmetic filters, create a stylesheet ready to be injected.\n * This function is optimistic and will assume there is no `:style` filter in\n * `rules`. In case one is found on the way, we fallback to the slower\n * `createStylesheetFromRulesWithCustomStyles` function.\n */\nfunction createStylesheetFromRules(rules) {\n    const selectors = [];\n    for (const rule of rules) {\n        if (rule.hasCustomStyle()) {\n            return createStylesheetFromRulesWithCustomStyles(rules);\n        }\n        selectors.push(rule.selector);\n    }\n    return createStylesheet(selectors, DEFAULT_HIDDING_STYLE);\n}\nfunction createLookupTokens(hostname, domain) {\n    const hostnamesHashes = getHostnameHashesFromLabelsBackward(hostname, domain);\n    const entitiesHashes = getEntityHashesFromLabelsBackward(hostname, domain);\n    const tokens = new Uint32Array(hostnamesHashes.length + entitiesHashes.length);\n    let index = 0;\n    for (const hash of hostnamesHashes) {\n        tokens[index++] = hash;\n    }\n    for (const hash of entitiesHashes) {\n        tokens[index++] = hash;\n    }\n    return tokens;\n}\n/**\n * Efficient container for CosmeticFilter instances. Allows to quickly\n * retrieved scripts and stylesheets to inject in pages for a specific\n * hostname/domain.\n */\nexport default class CosmeticFilterBucket {\n    static deserialize(buffer, config) {\n        const bucket = new CosmeticFilterBucket({ config });\n        bucket.genericRules = FiltersContainer.deserialize(buffer, CosmeticFilter.deserialize, config);\n        bucket.classesIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.hostnameIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.hrefsIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.htmlIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.idsIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        bucket.unhideIndex = ReverseIndex.deserialize(buffer, CosmeticFilter.deserialize, noopOptimizeCosmetic, config);\n        return bucket;\n    }\n    constructor({ filters = [], config }) {\n        this.genericRules = new FiltersContainer({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n        });\n        this.classesIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.hostnameIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.hrefsIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.htmlIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.idsIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        this.unhideIndex = new ReverseIndex({\n            config,\n            deserialize: CosmeticFilter.deserialize,\n            filters: [],\n            optimize: noopOptimizeCosmetic,\n        });\n        // In-memory cache, lazily initialized\n        this.baseStylesheet = null;\n        this.extraGenericRules = null;\n        if (filters.length !== 0) {\n            this.update(filters, undefined, config);\n        }\n    }\n    getFilters() {\n        const filters = [];\n        return filters.concat(this.genericRules.getFilters(), this.classesIndex.getFilters(), this.hostnameIndex.getFilters(), this.hrefsIndex.getFilters(), this.htmlIndex.getFilters(), this.idsIndex.getFilters(), this.unhideIndex.getFilters());\n    }\n    update(newFilters, removedFilters, config) {\n        const classSelectors = [];\n        const genericHideRules = [];\n        const hostnameSpecificRules = [];\n        const hrefSelectors = [];\n        const htmlRules = [];\n        const idSelectors = [];\n        const unHideRules = [];\n        for (const rule of newFilters) {\n            if (rule.isUnhide()) {\n                unHideRules.push(rule);\n            }\n            else if (rule.isHtmlFiltering()) {\n                htmlRules.push(rule);\n            }\n            else if (rule.isGenericHide()) {\n                if (rule.isClassSelector()) {\n                    classSelectors.push(rule);\n                }\n                else if (rule.isIdSelector()) {\n                    idSelectors.push(rule);\n                }\n                else if (rule.isHrefSelector()) {\n                    hrefSelectors.push(rule);\n                }\n                else {\n                    genericHideRules.push(rule);\n                }\n            }\n            else if (rule.isExtended() === false || config.loadExtendedSelectors === true) {\n                hostnameSpecificRules.push(rule);\n            }\n        }\n        this.genericRules.update(genericHideRules, removedFilters);\n        this.classesIndex.update(classSelectors, removedFilters);\n        this.hostnameIndex.update(hostnameSpecificRules, removedFilters);\n        this.hrefsIndex.update(hrefSelectors, removedFilters);\n        this.htmlIndex.update(htmlRules, removedFilters);\n        this.idsIndex.update(idSelectors, removedFilters);\n        this.unhideIndex.update(unHideRules, removedFilters);\n    }\n    getSerializedSize() {\n        return (this.genericRules.getSerializedSize() +\n            this.classesIndex.getSerializedSize() +\n            this.hostnameIndex.getSerializedSize() +\n            this.hrefsIndex.getSerializedSize() +\n            this.htmlIndex.getSerializedSize() +\n            this.idsIndex.getSerializedSize() +\n            this.unhideIndex.getSerializedSize());\n    }\n    serialize(buffer) {\n        this.genericRules.serialize(buffer);\n        this.classesIndex.serialize(buffer);\n        this.hostnameIndex.serialize(buffer);\n        this.hrefsIndex.serialize(buffer);\n        this.htmlIndex.serialize(buffer);\n        this.idsIndex.serialize(buffer);\n        this.unhideIndex.serialize(buffer);\n    }\n    getHtmlRules({ domain, hostname, isFilterExcluded, }) {\n        // Tokens from `hostname` and `domain` which will be used to lookup filters\n        // from the reverse index. The same tokens are re-used for multiple indices.\n        const hostnameTokens = createLookupTokens(hostname, domain);\n        const rules = [];\n        this.htmlIndex.iterMatchingFilters(hostnameTokens, (rule) => {\n            if (rule.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                rules.push(rule);\n            }\n            return true;\n        });\n        // If we found at least one candidate, check if we have unhidden rules.\n        const disabledRules = new Set();\n        if (rules.length !== 0) {\n            this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule) => {\n                if (rule.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                    disabledRules.add(rule.getSelector());\n                }\n                return true;\n            });\n        }\n        return rules.filter((rule) => disabledRules.size === 0 || disabledRules.has(rule.getSelector()) === false);\n    }\n    /**\n     * Request cosmetics and scripts to inject in a page.\n     */\n    getCosmeticsFilters({ domain, hostname, classes = [], hrefs = [], ids = [], allowGenericHides = true, allowSpecificHides = true, \n    // Allows to specify which rules to return\n    getBaseRules = true, getInjectionRules = true, getExtendedRules = true, getRulesFromDOM = true, getRulesFromHostname = true, isFilterExcluded, }) {\n        // Tokens from `hostname` and `domain` which will be used to lookup filters\n        // from the reverse index. The same tokens are re-used for multiple indices.\n        const hostnameTokens = createLookupTokens(hostname, domain);\n        const rules = [];\n        // =======================================================================\n        // Rules: hostname-specific\n        // =======================================================================\n        // Collect matching rules which specify a hostname constraint.\n        if (getRulesFromHostname === true) {\n            this.hostnameIndex.iterMatchingFilters(hostnameTokens, (rule) => {\n                // A hostname-specific filter is considered if it's a scriptlet (not\n                // impacted by disabling of specific filters) or specific hides are\n                // allowed.\n                if ((allowSpecificHides === true || rule.isScriptInject() === true) &&\n                    rule.match(hostname, domain) &&\n                    !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                    rules.push(rule);\n                }\n                return true;\n            });\n        }\n        // =======================================================================\n        // Rules: generic hide\n        // =======================================================================\n        // Optionally, collect genericHide rules. We need to make sure the `rule`\n        // matches the hostname and domain since some generic rules can specify\n        // negated hostnames and entities (e.g.: ~foo.*##generic).\n        if (allowGenericHides === true && getRulesFromHostname === true) {\n            const genericRules = this.getGenericRules();\n            for (const rule of genericRules) {\n                if (rule.match(hostname, domain) === true && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                    rules.push(rule);\n                }\n            }\n        }\n        // =======================================================================\n        // Class selector based\n        // =======================================================================\n        if (allowGenericHides === true && getRulesFromDOM === true && classes.length !== 0) {\n            this.classesIndex.iterMatchingFilters(hashStrings(classes), (rule) => {\n                if (rule.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                    rules.push(rule);\n                }\n                return true;\n            });\n        }\n        // =======================================================================\n        // Id selector based\n        // =======================================================================\n        if (allowGenericHides === true && getRulesFromDOM === true && ids.length !== 0) {\n            this.idsIndex.iterMatchingFilters(hashStrings(ids), (rule) => {\n                if (rule.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                    rules.push(rule);\n                }\n                return true;\n            });\n        }\n        // =======================================================================\n        // Href selector based\n        // =======================================================================\n        if (allowGenericHides === true && getRulesFromDOM === true && hrefs.length !== 0) {\n            this.hrefsIndex.iterMatchingFilters(compactTokens(concatTypedArrays(hrefs.map((href) => tokenizeNoSkip(href)))), (rule) => {\n                if (rule.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                    rules.push(rule);\n                }\n                return true;\n            });\n        }\n        const extended = [];\n        const injections = [];\n        const styles = [];\n        // If we found at least one candidate, check if we have unhidden rules,\n        // apply them and dispatch rules into `injections` (i.e.: '+js(...)'),\n        // `extended` (i.e. :not(...)), and `styles` (i.e.: '##rule').\n        if (rules.length !== 0) {\n            // =======================================================================\n            // Rules: unhide\n            // =======================================================================\n            // Collect unhidden selectors. They will be used to filter-out canceled\n            // rules from other indices.\n            let injectionsDisabled = false;\n            const disabledRules = new Set();\n            this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule) => {\n                if (rule.match(hostname, domain) && !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(rule))) {\n                    disabledRules.add(rule.getSelector());\n                    // Detect special +js() rules to disable scriptlet injections\n                    if (rule.isScriptInject() === true &&\n                        rule.isUnhide() === true &&\n                        rule.getSelector().length === 0) {\n                        injectionsDisabled = true;\n                    }\n                }\n                return true;\n            });\n            // Apply unhide rules + dispatch\n            for (const rule of rules) {\n                // Make sure `rule` is not un-hidden by a #@# filter\n                if (disabledRules.size !== 0 && disabledRules.has(rule.getSelector())) {\n                    continue;\n                }\n                // Dispatch rules in `injections` or `styles` depending on type\n                if (rule.isScriptInject() === true) {\n                    if (getInjectionRules === true && injectionsDisabled === false) {\n                        injections.push(rule);\n                    }\n                }\n                else if (rule.isExtended()) {\n                    if (getExtendedRules === true) {\n                        extended.push(rule);\n                    }\n                }\n                else {\n                    styles.push(rule);\n                }\n            }\n        }\n        // Create final stylesheet\n        let stylesheet = getBaseRules === false || allowGenericHides === false ? '' : this.getBaseStylesheet();\n        if (styles.length !== 0) {\n            if (stylesheet.length !== 0) {\n                stylesheet += '\\n\\n';\n            }\n            stylesheet += createStylesheetFromRules(styles);\n        }\n        const extendedProcessed = [];\n        if (extended.length !== 0) {\n            const extendedStyles = new Map();\n            for (const rule of extended) {\n                const ast = rule.getSelectorAST();\n                if (ast !== undefined) {\n                    const attribute = rule.isRemove() ? undefined : rule.getStyleAttributeHash();\n                    if (attribute !== undefined) {\n                        extendedStyles.set(rule.getStyle(), attribute);\n                    }\n                    extendedProcessed.push({\n                        ast,\n                        remove: rule.isRemove(),\n                        attribute,\n                    });\n                }\n            }\n            if (extendedStyles.size !== 0) {\n                if (stylesheet.length !== 0) {\n                    stylesheet += '\\n\\n';\n                }\n                stylesheet += [...extendedStyles.entries()]\n                    .map(([style, attribute]) => `[${attribute}] { ${style} }`)\n                    .join('\\n\\n');\n            }\n        }\n        return {\n            extended: extendedProcessed,\n            injections,\n            stylesheet,\n        };\n    }\n    /**\n     * Return the list of filters which can potentially be un-hidden by another\n     * rule currently contained in the cosmetic bucket.\n     */\n    getGenericRules() {\n        if (this.extraGenericRules === null) {\n            return this.lazyPopulateGenericRulesCache().genericRules;\n        }\n        return this.extraGenericRules;\n    }\n    /**\n     * The base stylesheet is made of generic filters (not specific to any\n     * hostname) which cannot be hidden (i.e.: there is currently no rule which\n     * might hide their selector). This means that it will never change and is\n     * the same for all sites. We generate it once and re-use it any-time we want\n     * to inject it.\n     */\n    getBaseStylesheet() {\n        if (this.baseStylesheet === null) {\n            return this.lazyPopulateGenericRulesCache().baseStylesheet;\n        }\n        return this.baseStylesheet;\n    }\n    /**\n     * This is used to lazily generate both the list of generic rules which can\n     * *potentially be un-hidden* (i.e.: there exists at least one unhide rule\n     * for the selector) and a stylesheet containing all selectors which cannot\n     * be un-hidden. Since this list will not change between updates we can\n     * generate once and use many times.\n     */\n    lazyPopulateGenericRulesCache() {\n        if (this.baseStylesheet === null || this.extraGenericRules === null) {\n            // Collect all selectors which can be subjected to an unhide rule\n            const unHideRules = this.unhideIndex.getFilters();\n            const canBeHiddenSelectors = new Set();\n            for (const rule of unHideRules) {\n                canBeHiddenSelectors.add(rule.getSelector());\n            }\n            // Split generic rules into two groups:\n            // 1. Rules which cannot be hidden\n            // 2. Rules which can be hidden on some domains\n            //\n            // This allows to create a base stylesheet which we know will never\n            // change then keep a minority of rules in-memory which can potentially\n            // be hidden.\n            const genericRules = this.genericRules.getFilters();\n            const cannotBeHiddenRules = [];\n            const canBeHiddenRules = [];\n            for (const rule of genericRules) {\n                if (rule.hasCustomStyle() ||\n                    rule.isScriptInject() ||\n                    rule.hasHostnameConstraint() ||\n                    canBeHiddenSelectors.has(rule.getSelector())) {\n                    canBeHiddenRules.push(rule);\n                }\n                else {\n                    cannotBeHiddenRules.push(rule);\n                }\n            }\n            this.baseStylesheet = createStylesheetFromRules(cannotBeHiddenRules);\n            this.extraGenericRules = canBeHiddenRules;\n        }\n        return {\n            baseStylesheet: this.baseStylesheet,\n            genericRules: this.extraGenericRules,\n        };\n    }\n}\n//# sourceMappingURL=cosmetic.js.map"],"names":["DEFAULT_HIDDING_STYLE","getHostnameHashesFromLabelsBackward","getEntityHashesFromLabelsBackward","FiltersContainer","CosmeticFilter","ReverseIndex","noopOptimizeCosmetic","filters","hashStrings","compactTokens","concatTypedArrays","tokenizeNoSkip"],"mappings":"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"}