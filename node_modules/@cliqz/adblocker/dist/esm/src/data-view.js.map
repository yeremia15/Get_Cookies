{"version":3,"file":"data-view.js","sources":["../../src/src/data-view.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport Compression from './compression';\nimport crc32 from './crc32';\nimport { decode, encode } from './punycode';\nexport const EMPTY_UINT8_ARRAY = new Uint8Array(0);\nexport const EMPTY_UINT32_ARRAY = new Uint32Array(0);\n// Check if current architecture is little endian\nconst LITTLE_ENDIAN = new Int8Array(new Int16Array([1]).buffer)[0] === 1;\n// Store compression in a lazy, global singleton\nlet getCompressionSingleton = () => {\n    const COMPRESSION = new Compression();\n    getCompressionSingleton = () => COMPRESSION;\n    return COMPRESSION;\n};\nfunction align4(pos) {\n    // From: https://stackoverflow.com/a/2022194\n    return (pos + 3) & ~0x03;\n}\n/**\n * Return size of of a serialized byte value.\n */\nexport function sizeOfByte() {\n    return 1;\n}\n/**\n * Return size of of a serialized boolean value.\n */\nexport function sizeOfBool() {\n    return 1;\n}\n/**\n * Return number of bytes needed to serialize `length`.\n */\nexport function sizeOfLength(length) {\n    return length <= 127 ? 1 : 5;\n}\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytes(array, align) {\n    return sizeOfBytesWithLength(array.length, align);\n}\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytesWithLength(length, align) {\n    // Alignment is a tricky thing because it depends on the current offset in\n    // the buffer at the time of serialization; which we cannot anticipate\n    // before actually starting serialization. This means that we need to\n    // potentially over-estimate the size (at most by 3 bytes) to make sure the\n    // final size is at least equal or a bit bigger than necessary.\n    return (align ? 3 : 0) + length + sizeOfLength(length);\n}\n/**\n * Return number of bytes needed to serialize `str` ASCII string.\n */\nexport function sizeOfASCII(str) {\n    return str.length + sizeOfLength(str.length);\n}\n/**\n * Return number of bytes needed to serialize `str` UTF8 string.\n */\nexport function sizeOfUTF8(str) {\n    const encodedLength = encode(str).length;\n    return encodedLength + sizeOfLength(encodedLength);\n}\n/**\n * Return number of bytes needed to serialize `array`.\n */\nexport function sizeOfUint32Array(array) {\n    return array.byteLength + sizeOfLength(array.length);\n}\nexport function sizeOfNetworkRedirect(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkRedirect.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfNetworkHostname(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkHostname.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfNetworkCSP(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkCSP.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfNetworkFilter(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkFilter.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfCosmeticSelector(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().cosmeticSelector.getCompressedSize(str), false)\n        : sizeOfASCII(str);\n}\nexport function sizeOfRawNetwork(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().networkRaw.getCompressedSize(encode(str)), false)\n        : sizeOfUTF8(str);\n}\nexport function sizeOfRawCosmetic(str, compression) {\n    return compression === true\n        ? sizeOfBytesWithLength(getCompressionSingleton().cosmeticRaw.getCompressedSize(encode(str)), false)\n        : sizeOfUTF8(str);\n}\n/**\n * This abstraction allows to serialize efficiently low-level values of types:\n * string, uint8, uint16, uint32, etc. while hiding the complexity of managing\n * the current offset and growing. It should always be instantiated with a\n * big-enough length because this will not allow for resizing. To allow\n * deciding the required total size, function estimating the size needed to\n * store different primitive values are exposes as static methods.\n *\n * This class is also more efficient than the built-in `DataView`.\n *\n * The way this is used in practice is that you write pairs of function to\n * serialize and deserialize a given structure/class (with code being pretty\n * symetrical). In the serializer you `pushX` values, and in the deserializer\n * you use `getX` functions to get back the values.\n */\nexport class StaticDataView {\n    /**\n     * Create an empty (i.e.: size = 0) StaticDataView.\n     */\n    static empty(options) {\n        return StaticDataView.fromUint8Array(EMPTY_UINT8_ARRAY, options);\n    }\n    /**\n     * Instantiate a StaticDataView instance from `array` of type Uint8Array.\n     */\n    static fromUint8Array(array, options) {\n        return new StaticDataView(array, options);\n    }\n    /**\n     * Instantiate a StaticDataView with given `capacity` number of bytes.\n     */\n    static allocate(capacity, options) {\n        return new StaticDataView(new Uint8Array(capacity), options);\n    }\n    constructor(buffer, { enableCompression }) {\n        if (LITTLE_ENDIAN === false) {\n            // This check makes sure that we will not load the adblocker on a\n            // big-endian system. This would not work since byte ordering is important\n            // at the moment (mainly for performance reasons).\n            throw new Error('Adblocker currently does not support Big-endian systems');\n        }\n        if (enableCompression === true) {\n            this.enableCompression();\n        }\n        this.buffer = buffer;\n        this.pos = 0;\n    }\n    enableCompression() {\n        this.compression = getCompressionSingleton();\n    }\n    checksum() {\n        return crc32(this.buffer, 0, this.pos);\n    }\n    dataAvailable() {\n        return this.pos < this.buffer.byteLength;\n    }\n    setPos(pos) {\n        this.pos = pos;\n    }\n    getPos() {\n        return this.pos;\n    }\n    seekZero() {\n        this.pos = 0;\n    }\n    slice() {\n        this.checkSize();\n        return this.buffer.slice(0, this.pos);\n    }\n    subarray() {\n        if (this.pos === this.buffer.byteLength) {\n            return this.buffer;\n        }\n        this.checkSize();\n        return this.buffer.subarray(0, this.pos);\n    }\n    /**\n     * Make sure that `this.pos` is aligned on a multiple of 4.\n     */\n    align4() {\n        this.pos = align4(this.pos);\n    }\n    set(buffer) {\n        this.buffer = new Uint8Array(buffer);\n        this.seekZero();\n    }\n    pushBool(bool) {\n        this.pushByte(Number(bool));\n    }\n    getBool() {\n        return Boolean(this.getByte());\n    }\n    setByte(pos, byte) {\n        this.buffer[pos] = byte;\n    }\n    pushByte(octet) {\n        this.pushUint8(octet);\n    }\n    getByte() {\n        return this.getUint8();\n    }\n    pushBytes(bytes, align = false) {\n        this.pushLength(bytes.length);\n        if (align === true) {\n            this.align4();\n        }\n        this.buffer.set(bytes, this.pos);\n        this.pos += bytes.byteLength;\n    }\n    getBytes(align = false) {\n        const numberOfBytes = this.getLength();\n        if (align === true) {\n            this.align4();\n        }\n        const bytes = this.buffer.subarray(this.pos, this.pos + numberOfBytes);\n        this.pos += numberOfBytes;\n        return bytes;\n    }\n    /**\n     * Allows row access to the internal buffer through a Uint32Array acting like\n     * a view. This is used for super fast writing/reading of large chunks of\n     * Uint32 numbers in the byte array.\n     */\n    getUint32ArrayView(desiredSize) {\n        // Round this.pos to next multiple of 4 for alignement\n        this.align4();\n        // Short-cut when empty array\n        if (desiredSize === 0) {\n            return EMPTY_UINT32_ARRAY;\n        }\n        // Create non-empty view\n        const view = new Uint32Array(this.buffer.buffer, this.pos + this.buffer.byteOffset, desiredSize);\n        this.pos += desiredSize * 4;\n        return view;\n    }\n    pushUint8(uint8) {\n        this.buffer[this.pos++] = uint8;\n    }\n    getUint8() {\n        return this.buffer[this.pos++];\n    }\n    pushUint16(uint16) {\n        this.buffer[this.pos++] = uint16 >>> 8;\n        this.buffer[this.pos++] = uint16;\n    }\n    getUint16() {\n        return ((this.buffer[this.pos++] << 8) | this.buffer[this.pos++]) >>> 0;\n    }\n    pushUint32(uint32) {\n        this.buffer[this.pos++] = uint32 >>> 24;\n        this.buffer[this.pos++] = uint32 >>> 16;\n        this.buffer[this.pos++] = uint32 >>> 8;\n        this.buffer[this.pos++] = uint32;\n    }\n    getUint32() {\n        return ((((this.buffer[this.pos++] << 24) >>> 0) +\n            ((this.buffer[this.pos++] << 16) |\n                (this.buffer[this.pos++] << 8) |\n                this.buffer[this.pos++])) >>>\n            0);\n    }\n    pushUint32Array(arr) {\n        this.pushLength(arr.length);\n        // TODO - use `set` to push the full buffer at once?\n        for (const n of arr) {\n            this.pushUint32(n);\n        }\n    }\n    getUint32Array() {\n        const length = this.getLength();\n        const arr = new Uint32Array(length);\n        // TODO - use `subarray`?\n        for (let i = 0; i < length; i += 1) {\n            arr[i] = this.getUint32();\n        }\n        return arr;\n    }\n    pushUTF8(raw) {\n        const str = encode(raw);\n        this.pushLength(str.length);\n        for (let i = 0; i < str.length; i += 1) {\n            this.buffer[this.pos++] = str.charCodeAt(i);\n        }\n    }\n    getUTF8() {\n        const byteLength = this.getLength();\n        this.pos += byteLength;\n        return decode(String.fromCharCode.apply(null, \n        // @ts-ignore\n        this.buffer.subarray(this.pos - byteLength, this.pos)));\n    }\n    pushASCII(str) {\n        this.pushLength(str.length);\n        for (let i = 0; i < str.length; i += 1) {\n            this.buffer[this.pos++] = str.charCodeAt(i);\n        }\n    }\n    getASCII() {\n        const byteLength = this.getLength();\n        this.pos += byteLength;\n        // @ts-ignore\n        return String.fromCharCode.apply(null, this.buffer.subarray(this.pos - byteLength, this.pos));\n    }\n    pushNetworkRedirect(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkRedirect.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getNetworkRedirect() {\n        if (this.compression !== undefined) {\n            return this.compression.networkRedirect.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushNetworkHostname(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkHostname.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getNetworkHostname() {\n        if (this.compression !== undefined) {\n            return this.compression.networkHostname.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushNetworkCSP(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkCSP.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getNetworkCSP() {\n        if (this.compression !== undefined) {\n            return this.compression.networkCSP.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushNetworkFilter(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkFilter.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getNetworkFilter() {\n        if (this.compression !== undefined) {\n            return this.compression.networkFilter.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushCosmeticSelector(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.cosmeticSelector.compress(str));\n        }\n        else {\n            this.pushASCII(str);\n        }\n    }\n    getCosmeticSelector() {\n        if (this.compression !== undefined) {\n            return this.compression.cosmeticSelector.decompress(this.getBytes());\n        }\n        return this.getASCII();\n    }\n    pushRawCosmetic(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.cosmeticRaw.compress(encode(str)));\n        }\n        else {\n            this.pushUTF8(str);\n        }\n    }\n    getRawCosmetic() {\n        if (this.compression !== undefined) {\n            return decode(this.compression.cosmeticRaw.decompress(this.getBytes()));\n        }\n        return this.getUTF8();\n    }\n    pushRawNetwork(str) {\n        if (this.compression !== undefined) {\n            this.pushBytes(this.compression.networkRaw.compress(encode(str)));\n        }\n        else {\n            this.pushUTF8(str);\n        }\n    }\n    getRawNetwork() {\n        if (this.compression !== undefined) {\n            return decode(this.compression.networkRaw.decompress(this.getBytes()));\n        }\n        return this.getUTF8();\n    }\n    checkSize() {\n        if (this.pos !== 0 && this.pos > this.buffer.byteLength) {\n            throw new Error(`StaticDataView too small: ${this.buffer.byteLength}, but required ${this.pos} bytes`);\n        }\n    }\n    // Serialiez `length` with variable encoding to save space\n    pushLength(length) {\n        if (length <= 127) {\n            this.pushUint8(length);\n        }\n        else {\n            this.pushUint8(128);\n            this.pushUint32(length);\n        }\n    }\n    getLength() {\n        const lengthShort = this.getUint8();\n        return lengthShort === 128 ? this.getUint32() : lengthShort;\n    }\n}\n//# sourceMappingURL=data-view.js.map"],"names":[],"mappings":"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"}