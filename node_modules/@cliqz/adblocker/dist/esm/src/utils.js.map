{"version":3,"file":"utils.js","sources":["../../src/src/utils.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { TOKENS_BUFFER } from './tokens-buffer';\nexport const HASH_INTERNAL_MULT = 37;\nexport const HASH_SEED = 5011;\n/***************************************************************************\n *  Bitwise helpers\n * ************************************************************************* */\n// From: https://stackoverflow.com/a/43122214/1185079\nexport function bitCount(n) {\n    n = n - ((n >> 1) & 0x55555555);\n    n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n    return (((n + (n >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n}\nexport function getBit(n, mask) {\n    return !!(n & mask);\n}\nexport function setBit(n, mask) {\n    return n | mask;\n}\nexport function clearBit(n, mask) {\n    return n & ~mask;\n}\nexport function fastHashBetween(str, begin, end) {\n    let hash = HASH_SEED;\n    for (let i = begin; i < end; i += 1) {\n        hash = (hash * HASH_INTERNAL_MULT) ^ str.charCodeAt(i);\n    }\n    return hash >>> 0;\n}\nexport function fastHash(str) {\n    if (typeof str !== 'string') {\n        return HASH_SEED;\n    }\n    if (str.length === 0) {\n        return HASH_SEED;\n    }\n    return fastHashBetween(str, 0, str.length);\n}\nexport function hashStrings(strings) {\n    const result = new Uint32Array(strings.length);\n    let index = 0;\n    for (const str of strings) {\n        result[index++] = fastHash(str);\n    }\n    return result;\n}\n// https://jsperf.com/string-startswith/21\nexport function fastStartsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    const ceil = needle.length;\n    for (let i = 0; i < ceil; i += 1) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function fastStartsWithFrom(haystack, needle, start) {\n    if (haystack.length - start < needle.length) {\n        return false;\n    }\n    const ceil = start + needle.length;\n    for (let i = start; i < ceil; i += 1) {\n        if (haystack[i] !== needle[i - start]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isDigit(ch) {\n    // 48 == '0'\n    // 57 == '9'\n    return ch >= 48 && ch <= 57;\n}\nexport function isAlpha(ch) {\n    // 65 == 'A'\n    // 90 == 'Z'\n    // 97 == 'a'\n    // 122 === 'z'\n    return (ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90);\n}\nfunction isAlphaExtended(ch) {\n    // 192 -> 450\n    // À  Á  Â  Ã  Ä  Å  Æ  Ç  È  É  Ê  Ë  Ì  Í  Î  Ï  Ð  Ñ  Ò  Ó  Ô  Õ  Ö  ×  Ø\n    // Ù  Ú  Û  Ü  Ý  Þ  ß  à  á  â  ã  ä  å  æ  ç  è  é  ê  ë  ì  í  î  ï  ð  ñ\n    // ò  ó  ô  õ  ö  ÷  ø  ù  ú  û  ü  ý  þ  ÿ  Ā  ā  Ă  ă  Ą  ą  Ć  ć  Ĉ  ĉ  Ċ\n    // ċ  Č  č  Ď  ď  Đ  đ  Ē  ē  Ĕ  ĕ  Ė  ė  Ę  ę  Ě  ě  Ĝ  ĝ  Ğ  ğ  Ġ  ġ  Ģ  ģ\n    // Ĥ  ĥ  Ħ  ħ  Ĩ  ĩ  Ī  ī  Ĭ  ĭ  Į  į  İ  ı  Ĳ  ĳ  Ĵ  ĵ  Ķ  ķ  ĸ  Ĺ  ĺ  Ļ  ļ\n    // Ľ  ľ  Ŀ  ŀ  Ł  ł  Ń  ń  Ņ  ņ  Ň  ň  ŉ  Ŋ  ŋ  Ō  ō  Ŏ  ŏ  Ő  ő  Œ  œ  Ŕ  ŕ\n    // Ŗ  ŗ  Ř  ř  Ś  ś  Ŝ  ŝ  Ş  ş  Š  š  Ţ  ţ  Ť  ť  Ŧ  ŧ  Ũ  ũ  Ū  ū  Ŭ  ŭ  Ů\n    // ů  Ű  ű  Ų  ų  Ŵ  ŵ  Ŷ  ŷ  Ÿ  Ź  ź  Ż  ż  Ž  ž  ſ  ƀ  Ɓ  Ƃ  ƃ  Ƅ  ƅ  Ɔ  Ƈ\n    // ƈ  Ɖ  Ɗ  Ƌ  ƌ  ƍ  Ǝ  Ə  Ɛ  Ƒ  ƒ  Ɠ  Ɣ  ƕ  Ɩ  Ɨ  Ƙ  ƙ  ƚ  ƛ  Ɯ  Ɲ  ƞ  Ɵ  Ơ\n    // ơ  Ƣ  ƣ  Ƥ  ƥ  Ʀ  Ƨ  ƨ  Ʃ  ƪ  ƫ  Ƭ  ƭ  Ʈ  Ư  ư  Ʊ  Ʋ  Ƴ  ƴ  Ƶ  ƶ  Ʒ  Ƹ  ƹ\n    // ƺ  ƻ  Ƽ  ƽ  ƾ  ƿ  ǀ  ǁ  ǂ\n    return ch >= 192 && ch <= 450;\n}\nfunction isCyrillic(ch) {\n    // 1024 -> 1279\n    // Ѐ Ё Ђ Ѓ Є Ѕ І Ї Ј Љ Њ Ћ Ќ Ѝ Ў Џ А Б В Г Д Е Ж З И Й К Л М Н О П Р С Т У Ф Х\n    // Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы\n    // ь э ю я ѐ ё ђ ѓ є ѕ і ї ј љ њ ћ ќ ѝ ў џ Ѡ ѡ Ѣ ѣ Ѥ ѥ Ѧ ѧ Ѩ ѩ Ѫ ѫ Ѭ ѭ Ѯ ѯ\n    // Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ Ѹ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ Ҁ ҁ ҂ ҃ ҄ ҅ ҆ ҇ ҈ ҉ Ҋ ҋ Ҍ ҍ Ҏ ҏ Ґ ґ Ғ ғ Ҕ ҕ Җ җ Ҙ ҙ\n    // Қ қ Ҝ ҝ Ҟ ҟ Ҡ ҡ Ң ң Ҥ ҥ Ҧ ҧ Ҩ ҩ Ҫ ҫ Ҭ ҭ Ү ү Ұ ұ Ҳ ҳ Ҵ ҵ Ҷ ҷ Ҹ ҹ Һ һ Ҽ ҽ Ҿ\n    // ҿ Ӏ Ӂ ӂ Ӄ ӄ Ӆ ӆ Ӈ ӈ Ӊ ӊ Ӌ ӌ Ӎ ӎ ӏ Ӑ ӑ Ӓ ӓ Ӕ ӕ Ӗ ӗ Ә ә Ӛ ӛ Ӝ ӝ Ӟ ӟ Ӡ ӡ Ӣ ӣ Ӥ\n    // ӥ Ӧ ӧ Ө ө Ӫ ӫ Ӭ ӭ Ӯ ӯ Ӱ ӱ Ӳ ӳ Ӵ ӵ Ӷ ӷ Ӹ ӹ Ӻ ӻ Ӽ ӽ Ӿ ӿ\n    return ch >= 1024 && ch <= 1279;\n}\nfunction isAllowedCode(ch) {\n    return (isAlpha(ch) || isDigit(ch) || ch === 37 /* '%' */ || isAlphaExtended(ch) || isCyrillic(ch));\n}\nexport function tokenizeWithWildcardsInPlace(pattern, skipFirstToken, skipLastToken, buffer) {\n    // TODO maybe better to check if buffer is full?\n    // Otherwise we are under-using the space.\n    const len = Math.min(pattern.length, buffer.remaining() * 2);\n    let inside = false;\n    let precedingCh = 0;\n    let start = 0;\n    let hash = HASH_SEED;\n    for (let i = 0; i < len; i += 1) {\n        const ch = pattern.charCodeAt(i);\n        if (isAllowedCode(ch) === true) {\n            if (inside === false) {\n                hash = HASH_SEED;\n                inside = true;\n                start = i;\n            }\n            hash = (hash * HASH_INTERNAL_MULT) ^ ch;\n        }\n        else {\n            if (inside === true) {\n                inside = false;\n                if (i - start > 1 && // Ignore tokens of 1 character\n                    ch !== 42 && // Ignore tokens followed by a '*'\n                    precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n                    (skipFirstToken === false || start !== 0)) {\n                    buffer.push(hash >>> 0);\n                }\n            }\n            precedingCh = ch;\n        }\n    }\n    if (skipLastToken === false &&\n        inside === true &&\n        precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n        pattern.length - start > 1 && // Ignore tokens of 1 character\n        buffer.full() === false) {\n        buffer.push(hash >>> 0);\n    }\n}\nexport function tokenizeInPlace(pattern, skipFirstToken, skipLastToken, buffer) {\n    const len = Math.min(pattern.length, buffer.remaining() * 2);\n    let inside = false;\n    let start = 0;\n    let hash = HASH_SEED;\n    for (let i = 0; i < len; i += 1) {\n        const ch = pattern.charCodeAt(i);\n        if (isAllowedCode(ch) === true) {\n            if (inside === false) {\n                hash = HASH_SEED;\n                inside = true;\n                start = i;\n            }\n            hash = (hash * HASH_INTERNAL_MULT) ^ ch;\n        }\n        else if (inside === true) {\n            inside = false;\n            if (i - start > 1 && // Ignore tokens of 1 character\n                (skipFirstToken === false || start !== 0)) {\n                buffer.push(hash >>> 0);\n            }\n        }\n    }\n    if (inside === true &&\n        skipLastToken === false &&\n        pattern.length - start > 1 && // Ignore tokens of 1 character\n        buffer.full() === false) {\n        buffer.push(hash >>> 0);\n    }\n}\nexport function tokenizeNoSkipInPlace(pattern, buffer) {\n    const len = Math.min(pattern.length, buffer.remaining() * 2);\n    let inside = false;\n    let start = 0;\n    let hash = HASH_SEED;\n    for (let i = 0; i < len; i += 1) {\n        const ch = pattern.charCodeAt(i);\n        if (isAllowedCode(ch) === true) {\n            if (inside === false) {\n                hash = HASH_SEED;\n                inside = true;\n                start = i;\n            }\n            hash = (hash * HASH_INTERNAL_MULT) ^ ch;\n        }\n        else if (inside === true) {\n            inside = false;\n            if (i - start > 1) {\n                buffer.push(hash >>> 0);\n            }\n        }\n    }\n    if (inside === true && pattern.length - start > 1 && buffer.full() === false) {\n        buffer.push(hash >>> 0);\n    }\n}\nexport function tokenizeNoSkip(pattern) {\n    TOKENS_BUFFER.reset();\n    tokenizeNoSkipInPlace(pattern, TOKENS_BUFFER);\n    return TOKENS_BUFFER.slice();\n}\nexport function tokenizeWithWildcards(pattern, skipFirstToken, skipLastToken) {\n    TOKENS_BUFFER.reset();\n    tokenizeWithWildcardsInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n    return TOKENS_BUFFER.slice();\n}\nexport function tokenize(pattern, skipFirstToken, skipLastToken) {\n    TOKENS_BUFFER.reset();\n    tokenizeInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n    return TOKENS_BUFFER.slice();\n}\nexport function tokenizeRegexInPlace(selector, tokens) {\n    let end = selector.length - 1;\n    let begin = 1;\n    let prev = 0;\n    // Try to find the longest safe *prefix* that we can tokenize\n    for (; begin < end; begin += 1) {\n        const code = selector.charCodeAt(begin);\n        // If we encounter '|' before any other opening bracket, then it's not safe\n        // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n        // to be safe.\n        if (code === 124 /* '|' */) {\n            return;\n        }\n        if (code === 40 /* '(' */ ||\n            code === 42 /* '*' */ ||\n            code === 43 /* '+' */ ||\n            code === 63 /* '?' */ ||\n            code === 91 /* '[' */ ||\n            code === 123 /* '{' */ ||\n            (code === 46 /* '.' */ && prev !== 92) /* '\\' */ ||\n            (code === 92 /* '\\' */ && isAlpha(selector.charCodeAt(begin + 1)))) {\n            break;\n        }\n        prev = code;\n    }\n    // Try to find the longest safe *suffix* that we can tokenize\n    prev = 0;\n    for (; end >= begin; end -= 1) {\n        const code = selector.charCodeAt(end);\n        // If we encounter '|' before any other opening bracket, then it's not safe\n        // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n        // to be safe.\n        if (code === 124 /* '|' */) {\n            return;\n        }\n        if (code === 41 /* ')' */ ||\n            code === 42 /* '*' */ ||\n            code === 43 /* '+' */ ||\n            code === 63 /* '?' */ ||\n            code === 93 /* ']' */ ||\n            code === 125 /* '}' */ ||\n            (code === 46 /* '.' */ && selector.charCodeAt(end - 1) !== 92) /* '\\' */ ||\n            (code === 92 /* '\\' */ && isAlpha(prev))) {\n            break;\n        }\n        prev = code;\n    }\n    if (end < begin) {\n        // Full selector is safe\n        const skipFirstToken = selector.charCodeAt(1) !== 94; /* '^' */\n        const skipLastToken = selector.charCodeAt(selector.length - 1) !== 36; /* '$' */\n        tokenizeInPlace(selector.slice(1, selector.length - 1), skipFirstToken, skipLastToken, tokens);\n    }\n    else {\n        // Tokenize prefix\n        if (begin > 1) {\n            tokenizeInPlace(selector.slice(1, begin), selector.charCodeAt(1) !== 94 /* '^' */, // skipFirstToken\n            true, tokens);\n        }\n        // Tokenize suffix\n        if (end < selector.length - 1) {\n            tokenizeInPlace(selector.slice(end + 1, selector.length - 1), true, selector.charCodeAt(selector.length - 1) !== 94 /* '^' */, // skipLastToken\n            tokens);\n        }\n    }\n}\nexport function binSearch(arr, elt) {\n    if (arr.length === 0) {\n        return -1;\n    }\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        const mid = (low + high) >>> 1;\n        const midVal = arr[mid];\n        if (midVal < elt) {\n            low = mid + 1;\n        }\n        else if (midVal > elt) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -1;\n}\nexport function binLookup(arr, elt) {\n    return binSearch(arr, elt) !== -1;\n}\n// eslint-disable-next-line no-control-regex\nconst hasUnicodeRe = /[^\\u0000-\\u00ff]/;\nexport function hasUnicode(str) {\n    return hasUnicodeRe.test(str);\n}\n//# sourceMappingURL=utils.js.map"],"names":[],"mappings":"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"}