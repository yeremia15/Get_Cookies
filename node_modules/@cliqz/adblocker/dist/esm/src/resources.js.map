{"version":3,"file":"resources.js","sources":["../../src/src/resources.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { getResourceForMime } from '@remusao/small';\nimport { sizeOfUTF8, sizeOfASCII, sizeOfByte } from './data-view';\n// Polyfill for `btoa`\nfunction btoaPolyfill(buffer) {\n    if (typeof btoa !== 'undefined') {\n        return btoa(buffer);\n    }\n    else if (typeof Buffer !== 'undefined') {\n        return Buffer.from(buffer).toString('base64');\n    }\n    return buffer;\n}\n// TODO - support # alias\n// TODO - support empty resource body\n/**\n * Abstraction on top of resources.txt used for redirections as well as script\n * injections. It contains logic to parse, serialize and get resources by name\n * for use in the engine.\n */\nexport default class Resources {\n    static deserialize(buffer) {\n        const checksum = buffer.getASCII();\n        // Deserialize `resources`\n        const resources = new Map();\n        const numberOfResources = buffer.getUint16();\n        for (let i = 0; i < numberOfResources; i += 1) {\n            resources.set(buffer.getASCII(), {\n                contentType: buffer.getASCII(),\n                body: buffer.getUTF8(),\n            });\n        }\n        // Deserialize `js`\n        const js = new Map();\n        resources.forEach(({ contentType, body }, name) => {\n            if (contentType === 'application/javascript') {\n                js.set(name, body);\n            }\n        });\n        return new Resources({\n            checksum,\n            js,\n            resources,\n        });\n    }\n    static parse(data, { checksum }) {\n        const typeToResource = new Map();\n        const trimComments = (str) => str.replace(/^\\s*#.*$/gm, '');\n        const chunks = data.split('\\n\\n');\n        for (const chunk of chunks) {\n            const resource = trimComments(chunk).trim();\n            if (resource.length !== 0) {\n                const firstNewLine = resource.indexOf('\\n');\n                const split = resource.slice(0, firstNewLine).split(/\\s+/);\n                const name = split[0];\n                const type = split[1];\n                const body = resource.slice(firstNewLine + 1);\n                if (name === undefined || type === undefined || body === undefined) {\n                    continue;\n                }\n                let resources = typeToResource.get(type);\n                if (resources === undefined) {\n                    resources = new Map();\n                    typeToResource.set(type, resources);\n                }\n                resources.set(name, body);\n            }\n        }\n        // The resource containing javascirpts to be injected\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const js = typeToResource.get('application/javascript') || new Map();\n        for (const [key, value] of js.entries()) {\n            if (key.endsWith('.js')) {\n                js.set(key.slice(0, -3), value);\n            }\n        }\n        // Create a mapping from resource name to { contentType, data }\n        // used for request redirection.\n        const resourcesByName = new Map();\n        typeToResource.forEach((resources, contentType) => {\n            resources.forEach((resource, name) => {\n                resourcesByName.set(name, {\n                    contentType,\n                    body: resource,\n                });\n            });\n        });\n        return new Resources({\n            checksum,\n            js,\n            resources: resourcesByName,\n        });\n    }\n    constructor({ checksum = '', js = new Map(), resources = new Map() } = {}) {\n        this.checksum = checksum;\n        this.js = js;\n        this.resources = resources;\n    }\n    getResource(name) {\n        const { body, contentType } = this.resources.get(name) || getResourceForMime(name);\n        let dataUrl;\n        if (contentType.indexOf(';') !== -1) {\n            dataUrl = `data:${contentType},${body}`;\n        }\n        else {\n            dataUrl = `data:${contentType};base64,${btoaPolyfill(body)}`;\n        }\n        return { body, contentType, dataUrl };\n    }\n    getSerializedSize() {\n        let estimatedSize = sizeOfASCII(this.checksum) + 2 * sizeOfByte(); // resources.size\n        this.resources.forEach(({ contentType, body }, name) => {\n            estimatedSize += sizeOfASCII(name) + sizeOfASCII(contentType) + sizeOfUTF8(body);\n        });\n        return estimatedSize;\n    }\n    serialize(buffer) {\n        // Serialize `checksum`\n        buffer.pushASCII(this.checksum);\n        // Serialize `resources`\n        buffer.pushUint16(this.resources.size);\n        this.resources.forEach(({ contentType, body }, name) => {\n            buffer.pushASCII(name);\n            buffer.pushASCII(contentType);\n            buffer.pushUTF8(body);\n        });\n    }\n}\n//# sourceMappingURL=resources.js.map"],"names":[],"mappings":"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"}