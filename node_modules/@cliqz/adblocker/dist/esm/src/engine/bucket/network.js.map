{"version":3,"file":"network.js","sources":["../../../../src/src/engine/bucket/network.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport NetworkFilter from '../../filters/network';\nimport { noopOptimizeNetwork, optimizeNetwork } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n/**\n * Accelerating data structure for network filters matching.\n */\nexport default class NetworkFilterBucket {\n    static deserialize(buffer, config) {\n        const bucket = new NetworkFilterBucket({ config });\n        bucket.index = ReverseIndex.deserialize(buffer, NetworkFilter.deserialize, config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork, config);\n        bucket.badFilters = FiltersContainer.deserialize(buffer, NetworkFilter.deserialize, config);\n        return bucket;\n    }\n    constructor({ filters = [], config }) {\n        this.index = new ReverseIndex({\n            config,\n            deserialize: NetworkFilter.deserialize,\n            filters: [],\n            optimize: config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n        });\n        this.badFiltersIds = null;\n        this.badFilters = new FiltersContainer({\n            config,\n            deserialize: NetworkFilter.deserialize,\n            filters: [],\n        });\n        if (filters.length !== 0) {\n            this.update(filters, undefined);\n        }\n    }\n    getFilters() {\n        const filters = [];\n        return filters.concat(this.badFilters.getFilters(), this.index.getFilters());\n    }\n    update(newFilters, removedFilters) {\n        const badFilters = [];\n        const remaining = [];\n        for (const filter of newFilters) {\n            if (filter.isBadFilter()) {\n                badFilters.push(filter);\n            }\n            else {\n                remaining.push(filter);\n            }\n        }\n        this.badFilters.update(badFilters, removedFilters);\n        this.index.update(remaining, removedFilters);\n        this.badFiltersIds = null;\n    }\n    getSerializedSize() {\n        return this.badFilters.getSerializedSize() + this.index.getSerializedSize();\n    }\n    serialize(buffer) {\n        this.index.serialize(buffer);\n        this.badFilters.serialize(buffer);\n    }\n    matchAll(request, isFilterExcluded) {\n        const filters = [];\n        this.index.iterMatchingFilters(request.getTokens(), (filter) => {\n            if (filter.match(request) &&\n                this.isFilterDisabled(filter) === false &&\n                !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                filters.push(filter);\n            }\n            return true;\n        });\n        return filters;\n    }\n    match(request, isFilterExcluded) {\n        let match;\n        this.index.iterMatchingFilters(request.getTokens(), (filter) => {\n            if (filter.match(request) &&\n                this.isFilterDisabled(filter) === false &&\n                !(isFilterExcluded === null || isFilterExcluded === void 0 ? void 0 : isFilterExcluded(filter))) {\n                match = filter;\n                return false;\n            }\n            return true;\n        });\n        return match;\n    }\n    /**\n     * Given a matching filter, check if it is disabled by a $badfilter.\n     */\n    isFilterDisabled(filter) {\n        // Lazily load information about bad filters in memory. The only thing we\n        // keep in memory is the list of IDs from $badfilter (ignoring the\n        // $badfilter option from mask). This allows to check if a matching filter\n        // should be ignored just by doing a lookup in a set of IDs.\n        if (this.badFiltersIds === null) {\n            const badFilters = this.badFilters.getFilters();\n            // Shortcut if there is no badfilter in this bucket\n            if (badFilters.length === 0) {\n                return false;\n            }\n            // Create in-memory list of disabled filter IDs\n            const badFiltersIds = new Set();\n            for (const badFilter of badFilters) {\n                badFiltersIds.add(badFilter.getIdWithoutBadFilter());\n            }\n            this.badFiltersIds = badFiltersIds;\n        }\n        return this.badFiltersIds.has(filter.getId());\n    }\n}\n//# sourceMappingURL=network.js.map"],"names":[],"mappings":"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"}