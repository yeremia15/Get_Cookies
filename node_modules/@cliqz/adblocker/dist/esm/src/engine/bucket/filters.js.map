{"version":3,"file":"filters.js","sources":["../../../../src/src/engine/bucket/filters.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { StaticDataView, sizeOfBytes } from '../../data-view';\n// Empty filters is 4 bytes because we need at least one 32 bits number to keep\n// track of the number of filters in the container. If there is no filter then\n// the number will be 0.\nconst EMPTY_FILTERS = new Uint8Array(4);\n/**\n * Generic filters container (for both CosmeticFilter and NetworkFilter\n * instances). This abstracts away some of the logic to serialize/lazy-load\n * lists of filters (which is useful for things like generic cosmetic filters\n * or $badfilter).\n */\nexport default class FiltersContainer {\n    static deserialize(buffer, deserialize, config) {\n        const container = new FiltersContainer({ deserialize, config, filters: [] });\n        container.filters = buffer.getBytes();\n        return container;\n    }\n    constructor({ config, deserialize, filters, }) {\n        this.deserialize = deserialize;\n        this.filters = EMPTY_FILTERS;\n        this.config = config;\n        if (filters.length !== 0) {\n            this.update(filters, undefined);\n        }\n    }\n    /**\n     * Update filters based on `newFilters` and `removedFilters`.\n     */\n    update(newFilters, removedFilters) {\n        // Estimate size of the buffer we will need to store filters. This avoids\n        // having to allocate a big chunk of memory up-front if it's not needed.\n        // We start with the current size of `this.filters` then update it with\n        // removed/added filters.\n        let bufferSizeEstimation = this.filters.byteLength;\n        let selected = [];\n        const compression = this.config.enableCompression;\n        // Add existing rules (removing the ones with ids in `removedFilters`)\n        const currentFilters = this.getFilters();\n        if (currentFilters.length !== 0) {\n            // If no filter was removed (we only add new ones), we don't need to\n            // filter out removed existing filters. So we just assign the array to\n            // `selected` directly to save a bit of effort.\n            if (removedFilters === undefined || removedFilters.size === 0) {\n                selected = currentFilters;\n            }\n            else {\n                // There might be some removed selected filters, so we iterate through\n                // them and make sure we keep only the ones not having been deleted.\n                for (const filter of currentFilters) {\n                    if (removedFilters.has(filter.getId()) === false) {\n                        selected.push(filter);\n                    }\n                    else {\n                        bufferSizeEstimation -= filter.getSerializedSize(compression);\n                    }\n                }\n            }\n        }\n        // If `selected` and `currentFilters` have the same length then no filter was removed.\n        const storedFiltersRemoved = selected.length !== currentFilters.length;\n        // Add new rules.\n        const numberOfExistingFilters = selected.length;\n        for (const filter of newFilters) {\n            bufferSizeEstimation += filter.getSerializedSize(compression);\n            selected.push(filter);\n        }\n        // Check if any new filter was added in `selected` (from `newFilters`).\n        const storedFiltersAdded = selected.length > numberOfExistingFilters;\n        // If selected changed, then update the compact representation of filters.\n        if (selected.length === 0) {\n            this.filters = EMPTY_FILTERS;\n        }\n        else if (storedFiltersAdded === true || storedFiltersRemoved === true) {\n            // Store filters in their compact form\n            const buffer = StaticDataView.allocate(bufferSizeEstimation, this.config);\n            buffer.pushUint32(selected.length);\n            // When we run in `debug` mode, we enable fully deterministic updates of\n            // internal data-structure. To this effect, we sort all filters before\n            // insertion.\n            if (this.config.debug === true) {\n                selected.sort((f1, f2) => f1.getId() - f2.getId());\n            }\n            for (const filter of selected) {\n                filter.serialize(buffer);\n            }\n            // Update internals\n            this.filters = buffer.buffer;\n        }\n    }\n    getSerializedSize() {\n        return sizeOfBytes(this.filters, false /* no alignement */);\n    }\n    serialize(buffer) {\n        buffer.pushBytes(this.filters);\n    }\n    getFilters() {\n        // No filter stored in the container\n        if (this.filters.byteLength <= 4) {\n            return [];\n        }\n        // Load all filters in memory and store them in `cache`\n        const filters = [];\n        const buffer = StaticDataView.fromUint8Array(this.filters, this.config);\n        const numberOfFilters = buffer.getUint32();\n        for (let i = 0; i < numberOfFilters; i += 1) {\n            filters.push(this.deserialize(buffer));\n        }\n        return filters;\n    }\n}\n//# sourceMappingURL=filters.js.map"],"names":[],"mappings":"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"}