{"version":3,"file":"optimizer.js","sources":["../../../src/src/engine/optimizer.js"],"sourcesContent":["/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport NetworkFilter from '../filters/network';\nimport { setBit } from '../utils';\nimport { Domains } from '../engine/domains';\nfunction processRegex(r) {\n    return `(?:${r.source})`;\n}\nfunction escape(s) {\n    return `(?:${s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')})`;\n}\nfunction setWithDefault(map, key, value) {\n    let bucket = map.get(key);\n    if (bucket === undefined) {\n        bucket = [];\n        map.set(key, bucket);\n    }\n    bucket.push(value);\n}\nfunction groupBy(filters, criteria) {\n    const grouped = new Map();\n    for (const filter of filters) {\n        setWithDefault(grouped, criteria(filter), filter);\n    }\n    return Array.from(grouped.values());\n}\nfunction splitBy(filters, condition) {\n    const positive = [];\n    const negative = [];\n    for (const filter of filters) {\n        if (condition(filter)) {\n            positive.push(filter);\n        }\n        else {\n            negative.push(filter);\n        }\n    }\n    return {\n        negative,\n        positive,\n    };\n}\nconst OPTIMIZATIONS = [\n    {\n        description: 'Remove duplicated filters by ID',\n        fusion: (filters) => filters[0],\n        groupByCriteria: (filter) => '' + filter.getId(),\n        select: () => true,\n    },\n    {\n        description: 'Group idential filter with same mask but different domains in single filters',\n        fusion: (filters) => {\n            const parts = [];\n            const hostnames = new Set();\n            const notHostnames = new Set();\n            const entities = new Set();\n            const notEntities = new Set();\n            for (const { domains } of filters) {\n                if (domains !== undefined) {\n                    if (domains.parts !== undefined) {\n                        parts.push(domains.parts);\n                    }\n                    if (domains.hostnames !== undefined) {\n                        for (const hash of domains.hostnames) {\n                            hostnames.add(hash);\n                        }\n                    }\n                    if (domains.entities !== undefined) {\n                        for (const hash of domains.entities) {\n                            entities.add(hash);\n                        }\n                    }\n                    if (domains.notHostnames !== undefined) {\n                        for (const hash of domains.notHostnames) {\n                            notHostnames.add(hash);\n                        }\n                    }\n                    if (domains.notEntities !== undefined) {\n                        for (const hash of domains.notEntities) {\n                            notEntities.add(hash);\n                        }\n                    }\n                }\n            }\n            return new NetworkFilter(Object.assign({}, filters[0], {\n                domains: new Domains({\n                    hostnames: hostnames.size !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n                    entities: entities.size !== 0 ? new Uint32Array(entities).sort() : undefined,\n                    notHostnames: notHostnames.size !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n                    notEntities: notEntities.size !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n                    parts: parts.length !== 0 ? parts.join(',') : undefined,\n                }),\n                rawLine: filters[0].rawLine !== undefined\n                    ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n                    : undefined,\n            }));\n        },\n        groupByCriteria: (filter) => filter.getHostname() + filter.getFilter() + filter.getMask() + filter.getRedirect(),\n        select: (filter) => !filter.isCSP() && filter.denyallow === undefined && filter.domains !== undefined,\n    },\n    {\n        description: 'Group simple patterns, into a single filter',\n        fusion: (filters) => {\n            const patterns = [];\n            for (const f of filters) {\n                if (f.isRegex()) {\n                    patterns.push(processRegex(f.getRegex()));\n                }\n                else if (f.isRightAnchor()) {\n                    patterns.push(`${escape(f.getFilter())}$`);\n                }\n                else if (f.isLeftAnchor()) {\n                    patterns.push(`^${escape(f.getFilter())}`);\n                }\n                else {\n                    patterns.push(escape(f.getFilter()));\n                }\n            }\n            return new NetworkFilter(Object.assign({}, filters[0], {\n                mask: setBit(filters[0].mask, 8388608 /* NETWORK_FILTER_MASK.isRegex */),\n                rawLine: filters[0].rawLine !== undefined\n                    ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n                    : undefined,\n                regex: new RegExp(patterns.join('|')),\n            }));\n        },\n        groupByCriteria: (filter) => '' + (filter.getMask() & ~8388608 /* NETWORK_FILTER_MASK.isRegex */ & ~4194304 /* NETWORK_FILTER_MASK.isFullRegex */),\n        select: (filter) => filter.domains === undefined &&\n            filter.denyallow === undefined &&\n            !filter.isHostnameAnchor() &&\n            !filter.isRedirect() &&\n            !filter.isCSP(),\n    },\n];\n/**\n * Optimizer which returns the list of original filters.\n */\nexport function noopOptimizeNetwork(filters) {\n    return filters;\n}\nexport function noopOptimizeCosmetic(filters) {\n    return filters;\n}\n/**\n * Fusion a set of `filters` by applying optimizations sequentially.\n */\nexport function optimizeNetwork(filters) {\n    const fused = [];\n    let toFuse = filters;\n    for (const { select, fusion, groupByCriteria } of OPTIMIZATIONS) {\n        const { positive, negative } = splitBy(toFuse, select);\n        toFuse = negative;\n        const groups = groupBy(positive, groupByCriteria);\n        for (const group of groups) {\n            if (group.length > 1) {\n                fused.push(fusion(group));\n            }\n            else {\n                toFuse.push(group[0]);\n            }\n        }\n    }\n    for (const filter of toFuse) {\n        fused.push(filter);\n    }\n    return fused;\n}\n//# sourceMappingURL=optimizer.js.map"],"names":[],"mappings":"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"}